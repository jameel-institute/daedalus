[{"path":"https://jameel-institute.github.io/daedalus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Imperial College Science, Technology Medicine Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/daedalus.html","id":"representing-countries-and-territories","dir":"Articles","previous_headings":"","what":"Representing countries and territories","title":"Getting started with DAEDALUS","text":"model can run country territory included package data simply passing name daedalus(). country_names vector holds list country territory names data available. Passing country name directly leads model accessing country characteristics stored package data. modify country characteristics, example examine assumptions around changed contact patterns, users instead create object class <daedalus_country>, allows setting certain country characteristics custom values. class also allows users collect country data one place easily. package provides data Walker et al. (2020) country demography, country workforce per economic sector, social contacts age groups country_data. package also provides data Jarvis et al. (2024) workplace contacts economic sectors. datasets accessed internal functions reduce need user input.","code":"# get default values for Canada (chosen for its short name) daedalus_country(\"Canada\") #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5235823 5.014414 0.3169637 #> 5-19  0.5104463 8.7459756 6.322175 0.7948344 #> 20-64 0.4351641 1.6376280 7.821398 1.0350292 #> 65+   0.1187166 0.7488765 3.639207 1.5142917 #> • GNI (PPP $): 46050 #> • Hospital capacity: 7989  # make a <daedalus_country> representing Canada # and modify contact patterns country_canada <- daedalus_country(   \"Canada\",   parameters = list(     contact_matrix = matrix(5, 4, 4) # uniform contacts across age groups   ) )  # print to examine; only some essential information is shown country_canada #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]    5    5    5    5 #> [2,]    5    5    5    5 #> [3,]    5    5    5    5 #> [4,]    5    5    5    5 #> • GNI (PPP $): 46050 #> • Hospital capacity: 7989"},{"path":"https://jameel-institute.github.io/daedalus/articles/daedalus.html","id":"representing-infection-parameters","dir":"Articles","previous_headings":"","what":"Representing infection parameters","title":"Getting started with DAEDALUS","text":"daedalus allows users quickly model one seven historical epidemics accessing infection parameters associated epidemics, stored package data. Epidemics associated infection parameters given package dependency daedalus.data daedalus.data::epidemic_names. Users can pass epidemic names directly daedalus() use default infection parameters. modify infection parameters associated epidemic, users create <daedalus_infection> class Users can also override epidemic-specific infection parameter values creating <infection> class object. infection() class helper function details parameters included.","code":"daedalus.data::epidemic_names #> [1] \"sars_cov_1\"           \"influenza_2009\"       \"influenza_1957\"       #> [4] \"influenza_1918\"       \"sars_cov_2_pre_alpha\" \"sars_cov_2_omicron\"   #> [7] \"sars_cov_2_delta\" # not run output <- daedalus(\"Canada\", \"influenza_1918\") # SARS-1 (2004) but with an R0 of 2.3 daedalus_infection(\"sars_cov_1\", r0 = 2.3) #> <daedalus_infection> #> • Epidemic name: sars_cov_1 #> • R0: 2.3 #> • sigma: 0.217 #> • p_sigma: 0.867 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.018, 0.082, 0.018, and 0.246 #> • hfr: 0.255, 0.255, 0.255, and 0.255 #> • gamma_Ia: 0.476 #> • gamma_Is: 0.25 #> • gamma_H_recovery: 0.044 #> • gamma_H_death: 0.05  # Influenza 1918 but with mortality rising with age daedalus_infection(\"influenza_1918\", hfr = c(0.01, 0.02, 0.03, 0.1)) #> <daedalus_infection> #> • Epidemic name: influenza_1918 #> • R0: 2.5 #> • sigma: 0.909 #> • p_sigma: 0.669 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.073, 0.064, 0.02, and 0.152 #> • hfr: 0.01, 0.02, 0.03, and 0.1 #> • gamma_Ia: 0.4 #> • gamma_Is: 0.4 #> • gamma_H_recovery: 0.2 #> • gamma_H_death: 0.2"},{"path":"https://jameel-institute.github.io/daedalus/articles/daedalus.html","id":"representing-vaccine-investment-for-pandemic-preparedness","dir":"Articles","previous_headings":"","what":"Representing vaccine investment for pandemic preparedness","title":"Getting started with DAEDALUS","text":"daedalus includes vaccination response model. default response assumes advance, pre-pandemic investment vaccine specific pandemic-causing pathogen. scenario (vaccine_investment = \"none\") intended represent Covid-19 pandemic, assumes vaccine becomes available 1 year pandemic begins, slow roll , uptake low. parameters contained package data daedalus::vaccine_scenario_data, total four scenarios advance vaccine investment (“none”, “low”, “medium”, “high”). Vaccine investment scenarios can passed string daedalus() use default parameters scenario, <daedalus_vaccination> object using daedalus_vaccination(name, country) modify vaccination parameters. Note country information needed calculate numerical uptake limit scenario.","code":"# the default vaccine investment scenario for the UK daedalus_vaccination(\"none\", \"GBR\") #> <daedalus_vaccination/daedalus_response> #> Vaccine investment scenario: none #> • Start time (days): 365 #> • Rate (% per day): 0.143 #> • Uptake limit (%): 40 #> • Efficacy (%): 50 #> • Waning period (mean, days): 180"},{"path":"https://jameel-institute.github.io/daedalus/articles/daedalus.html","id":"running-the-model","dir":"Articles","previous_headings":"","what":"Running the model","title":"Getting started with DAEDALUS","text":"Run model passing country infection arguments daedalus(). vaccine investment scenarios automatically assumed “none”. model runs 300 timesteps default; timesteps interpreted days since model parameters terms days. Plot data view epidemic curve.","code":"# simulate a Covid-19 wild type outbreak in Canada; using default parameters data <- daedalus(\"Canada\", \"sars_cov_2_pre_alpha\") data <- get_data(data) ggplot(   data[data$compartment == \"infect_symp\" & data$age_group == \"20-64\", ] ) +   geom_line(     aes(time, value, colour = econ_sector),     show.legend = FALSE   ) +   facet_wrap(     facets = vars(age_group)   )"},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/articles/info_edu_value.html","id":"value-of-a-school-year","dir":"Articles","previous_headings":"","what":"Value of a school year","title":"Value of educational time lost","text":"value school year country (VSYc\\text{VSY}_c) product country-specific gross national income (GNIc\\text{GNI}_c) per capita, rate return education (RR), present value expected future earnings (denote VV). VSYc=GNIc×V×R\\text{VSY}_c = \\text{GNI}_c \\times V \\times R","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_edu_value.html","id":"valuation-constants","dir":"Articles","previous_headings":"Value of a school year","what":"Valuation constants","title":"Value of educational time lost","text":"following constants assumed calculating value school year: r=0.03r = 0.03: discount rate future earnings; =45m_Y = 45: expected future years work; =12.5a = 12.5: mean age school-going individuals. Note mean age school-goers simple mean age-bin [5, 20). R=0.08R = 0.08: rate return one year education.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_edu_value.html","id":"country-gni","dir":"Articles","previous_headings":"Value of a school year","what":"Country GNI","title":"Value of educational time lost","text":"Country GNI values recent year available, taken World Bank’s World Development Indicators.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_edu_value.html","id":"present-value-of-future-earnings","dir":"Articles","previous_headings":"Value of a school year","what":"Present value of future earnings","title":"Value of educational time lost","text":"constant scaling factor present value future (lost) earnings (VV) calculated using valuation constants defined . 1−(1+r)−(+20−)r−1−(1+r)−(20−)r\\frac{1 - (1 + r)^{-(m_Y + 20 - )}}{r} - \\frac{1 - (1 + r)^{-(20 - )}}{r}","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_edu_value.html","id":"value-of-education-lost","dir":"Articles","previous_headings":"","what":"Value of education lost","title":"Value of educational time lost","text":"value lost education product : number school days lost due pandemic-mitigation measures (DAEDALUS, school closures); explained ; 1−Eremote1 - E_{\\text{remote}}: loss educational efficacy due remote education closures; VSDc\\text{VSD}_c: value school day, value school year divided 365 (VSYc/365\\text{VSY}_c / 365); NN: number school age children. VSDc×N×(1−Oedu)×T×(1−Eremote)\\text{VSD}_c \\times N \\times (1 - O_{\\text{edu}}) \\times T \\times (1 - E_{\\text{remote}}) number school days lost calculated product closure coefficient educational sector (1−Oedu1 - O_{\\text{edu}}) number days pandemic-mitigation measure active TT. closure coefficient indicates stringency measures applied schooling, can take value range [0,1][0, 1].","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_edu_value.html","id":"future-developments","dir":"Articles","previous_headings":"","what":"Future developments","title":"Value of educational time lost","text":"Future development valuation education lost planned, includes: Accounting numbers children age-bin demographic data correctly calculating present value future earnings (VV) accounting differences expected remaining years work; Including effect education missed due student absences caused illness isolation.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_life_value.html","id":"value-of-a-life-year","dir":"Articles","previous_headings":"","what":"Value of a life year","title":"Value of life-years lost","text":"value life year (VLY) country assumed gross national income (GNI) per capita scaled purchasing power parity international dollars. Country GNI values recent year available, taken World Bank’s World Development Indicators. Note discounting applied older age groups, , remaining years life valued , adjusted disabilities quality.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_life_value.html","id":"life-expectancy","dir":"Articles","previous_headings":"","what":"Life expectancy","title":"Value of life-years lost","text":"Life-expectancy data terms years country territory initially accessed age-bins separated sex. life-expectancy data aggregated DAEDALUS age bins: 0 – 4, 5 – 19 (school age), 20 – 65 (working age), 65+ (retired working). Note aggregation simple mean across age-bins raw data; appropriate approach aim add future weighted mean takes account size age-bin raw data. results four life-expectancy values country, corresponding one four DAEDALUS age groups.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_life_value.html","id":"value-of-a-statistical-life","dir":"Articles","previous_headings":"","what":"Value of a statistical life","title":"Value of life-years lost","text":"Many policies aim improve longevity, decreasing risk death year. value risk reductions often expressed value per statistical life (VSL); times value per statistical life year (VSLY) may used. VSL concept widely misunderstood. value analyst, government, individual places saving identified life certainty. Instead, reflects individuals’ willingness exchange money small change risk, 1 10,000 decrease chance dying specific year (Robinson et al. 2019). value statistical life individual country cc age group ii denoted VSLci\\text{VSL}_{c_i} product country-specific VLY (VLYc\\text{VLY}_{c}) country- age-specific life expectancy (TciT_{c_i}), depends country age-group individual; can expressed : VSLci=VLYc×Tci\\text{VSL}_{c_i} = \\text{VLY}_c \\times T_{c_i} daedalus, country- age-specifc VSL values can accessed package data object daedalus::life_value. values also automatically accessed included <daedalus_country> object created, name vsl.","code":"# load library for examples library(daedalus)  # create a <daedalus_country> x <- daedalus_country(\"China\")  # access VSL values using either a helper function or # the subsetting operator get_data(x, \"vsl\") #> [1] 1322296.0 1166990.6  674010.6  177462.6  x$vsl #> [1] 1322296.0 1166990.6  674010.6  177462.6"},{"path":"https://jameel-institute.github.io/daedalus/articles/info_life_value.html","id":"value-of-lives-lost","dir":"Articles","previous_headings":"","what":"Value of lives lost","title":"Value of life-years lost","text":"daedalus() scenario, total value lives lost sum products country- age-specific VSL number deaths age-group country: Σi=1NVSLci×Di\\Sigma_{= 1}^{N} \\text{VSL}_{c_i} \\times D_i DiD_i total number deaths age group ii, ∈1,2,3,4i \\1, 2, 3, 4 (detailed ). users’ convenience, total value lives lost reported million dollars, bring line scaling used pandemic costs.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"rationale","dir":"Articles","previous_headings":"","what":"Rationale","title":"General model description","text":"daedalus package implementation deterministic epidemiological economic model emergence spread respiratory pathogen pandemics countries. Specifically, daedalus tracks Health impact terms infections, hospitalisations, deaths years life lost (YLL), Economic impact terms GDP losses : Economic sector closures workforce depletion due infection, hospitalisation death Present life-time economic losses missed education Human life losses using value statistical life approach Presently, equipped daedalus parameters simulate seven potential pathogens (influenza 2009, influenza 1957, influenza 1918, SARS-CoV-1, SARS-CoV-2 pre-Alpha variant, SARS-CoV-2 Delta SARS-CoV-2 Omicron BA.1, see @ref(tab:pathogendata)) across 67 countries. addition, daedalus allows user flexibility incorporate additional respiratory pathogen /country parameters data, considered appropriate use case. following sections present technical description epidemiological economic components daedalus. examples implementation research case studies, see original description daedalus application UK COVID-19 pandemic Haw et al. (2022) Study societal value SARS-CoV-2 booster vaccination Indonesia Johnson et al. (2023) Study promoting healthy populations pandemic preparedness strategy Mexico Johnson et al. (2024)","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"model-structure","dir":"Articles","previous_headings":"Epidemiological model","what":"Model structure","title":"General model description","text":"daedalus simulates country’s population split seven possible disease state compartments. Model compartments stratified age-sector sector ii vaccination jj classes. susceptible individual SS can become exposed virus enter latent state EE, can develop either symptomatic IsIs asymptomatic IaIa infection. Whereas asymptomatic infected individuals assumed always recover, symptomatic ones can either recover RR develop severe condition requiring hospitalisation HH, can either recover die DD.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"ordinary-differential-equations","dir":"Articles","previous_headings":"Epidemiological model > Model structure","what":"Ordinary differential equations","title":"General model description","text":"dSi,jdt=ζeffj=0(t)Si,j=0(t)−Λi,j(t)Si,j(t)+ρRi,j(t)−ζj=1Si,j=1(t)dEi,jdt=Λi,j(t)Si,j(t)−σEi,j(t)dIai,jdt=(1−psymp)σEi,j(t)−γIaIai,j(t)dIsi,jdt=psympσEi,j(t)−γIsIsi,j(t)−ηiIsi,j(t)dHi,jdt=ηiIsi,j(t)−ωiHi,j(t)−γHiHi,j(t)dRi,jdt=ζeffj=0(t)Ri,j=0(t)+γIsIsi,j(t)+γIaIai,j(t)+γHiHi,j(t)−ρRi,j(t)−ζj=1Ri,j=1(t)dDi,jdt=ωiHi,j(t)\\begin{align}     & \\frac{dS_{,j}}{dt} = \\zeta_{eff_{j=0}}(t) S_{,j=0}(t) - \\Lambda_{,j} (t) S_{,j}(t)  + \\rho R_{,j}(t) - \\zeta_{j=1} S_{,j=1}(t)\\\\     & \\frac{dE_{,j}}{dt} = \\Lambda_{,j} (t) S_{,j}(t) - \\sigma E_{,j}(t) \\\\     & \\frac{dIa_{,j}}{dt} = (1 - p_\\text{symp}) \\sigma E_{,j}(t) - \\gamma_{Ia} Ia_{,j}(t) \\\\     & \\frac{dIs_{,j}}{dt} = p_\\text{symp} \\sigma E_{,j}(t) - \\gamma_{} Is_{,j}(t) - \\eta^Is_{,j}(t) \\\\     & \\frac{dH_{,j}}{dt} = \\eta^Is_{,j}(t) - \\omega^H_{,j}(t) - \\gamma_H^H_{,j}(t) \\\\     & \\frac{dR_{,j}}{dt} = \\zeta_{eff_{j=0}}(t) R_{,j=0}(t) + \\gamma_{} Is_{,j}(t) + \\gamma_{Ia} Ia_{,j}(t) + \\gamma_H^H_{,j}(t) - \\rho R_{,j}(t) - \\zeta_{j=1} R_{,j=1}(t)\\\\     & \\frac{dD_{,j}}{dt} = \\omega^H_{,j}(t)\\\\ \\end{align} noted whilst model parameters vary time (e.g., ζeffj=0(t)\\zeta_{eff_{j=0}}(t) effective vaccination rate scaled available susceptible population) others assumed fixed (e.g., σ\\sigma constant rate E→IE \\rightarrow progression), indicated (t)(t). One parameter varies endogenously age-specific mortality rate ωi\\omega^; mortality rates groups increased 160% total number individuals ‘hospitalised’ compartment exceeds country-specific surge hospital capacity available responding outbreak. Note , default, daedalus ships collection pre-defined parameter sets represent historical respiratory pandemic pathogens (see @ref(tab:pathogendata)), contained daedalus.data. can saved object class daedalus_infection modified user passed model function daedalus::daedalus().","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"age-sector-classes","dir":"Articles","previous_headings":"Epidemiological model > Model structure","what":"Age-sector classes","title":"General model description","text":"49 age-sector classes ii daedalus: four age ∈1:4i \\1:4 groups ([0−5],[5−20),[20−65),65+)( [0-5], [5-20), [20-65),65+) , given population =3i=3 (20-65) represents unemployed adults ofr working age, 45 economic groups ∈5:49i \\5:49 (see Economic model ).","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"vaccination-classes","dir":"Articles","previous_headings":"Epidemiological model > Model structure","what":"Vaccination classes","title":"General model description","text":"default, daedalus disaggregates population vaccination classes j∈1:2j \\1:2 unvaccinated vaccinated. assume population susceptible recovered compartments can vaccinated, given transition rate ζeffj=0(t)\\zeta_{eff_{j=0}}(t), determined user (see Table @ref(tab:vaccine)). Vaccinated individuals can lose immunity transition back unvaccinated class, given rate ρ\\rho.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"model-transition-parameters","dir":"Articles","previous_headings":"Epidemiological model","what":"Model transition parameters","title":"General model description","text":"daedalus can simulate nine different pathogens (influenza 2009, influenza 1957, influenza 1918, SARS-CoV-1, SARS-CoV-2 pre-Alpha variant, SARS-CoV-2 Delta SARS-CoV-2 Omicron BA.1) pathogen-specific transition (see Table @ref(tab:pathogendata)). (#tab:transitionpars) Definition model transition parameters.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"seed-and-force-of-infection","dir":"Articles","previous_headings":"Epidemiological model > Model transition parameters","what":"Seed and force of infection","title":"General model description","text":"given pathogen, assume seed 10−710^{-7} infections, assumed symptomatic. force infection λi,j(t)\\lambda_{,j} (t) accounts infection contributions symptomatically Isij(t)Is_{ij}(t) asymptomatically Iaij(t)Ia_{ij}(t) infected individuals community workplaces. let δIcommi(t)\\delta Icomm^(t) δIworki(t)\\delta Iwork^(t) denote number infected individuals community workplace, respectively, weighted infectivity given δIcommij(t)=veffj=1(Iai∈1:4,j(t)ϵ+Isi∈1:4,j(t))δIworkij(t)=veffj=1(Iai∈5:49,j(t)ϵ+Isi∈5:49,j(t)),\\begin{align}     & \\delta Icomm_{ij}(t) = v_{eff_{j=1}} (Ia_{\\1:4,j}(t) \\epsilon + Is_{\\1:4,j}(t))\\\\     & \\delta Iwork_{ij}(t) = v_{eff_{j=1}} (Ia_{\\5:49,j}(t) \\epsilon + Is_{\\5:49,j}(t)), \\end{align} ϵ\\epsilon relative infectiousness asymptomatically infected individual relative symptomatic one, veffj=1v_{eff_{j=1}} reduced susceptibility vaccinated individual relative unvaccinated one age. force infection community λcommi,j(t)\\lambda_{comm_{,j}} (t) susceptible individual thus modelled λcommi,j(t)=β(t)⋅∑′mi,′∑j′δIcommi′,j′(t)\\begin{align} \\lambda_{comm_{,j}} (t) & =     \\beta (t) \\cdot \\sum_{'} m_{,'} \\sum_{j'} \\delta Icomm_{',j'} (t) \\end{align} β(t)\\beta(t) represents time-varying contact rate scaling factor, determined social distancing interventions simulated, mi,′m_{,'} (symmetric) person--person contact rate age group ii ′'. force infection within workplace λworki,j(t)\\lambda_{work_{,j}} (t) modelled λworki,j(t)=β(t)⋅Φi(t)⋅∑′=0i′=NCi,′∑j′δIworki′,j′(t)\\begin{align} \\lambda_{work_{,j}} (t) & =     \\beta (t) \\cdot \\Phi_i(t) \\cdot \\sum_{'=0}^{'=N} C_{,'} \\sum_{j'} \\delta Iwork_{',j'} (t) \\end{align} Ci,′C_{,'} contact matrix specific workplace, Φi(t)\\Phi_i(t) scaling factor determined economic closure interventions simulated. Lastly, force infection infected individuals community susceptible workers λc2wi,j(t)\\lambda_{c2w_{,j}} (t) (.e., infected individuals community attending shops) given λc2wi,j(t)=β(t)⋅Φi(t)⋅∑′=0i′=NCtoWi,′∑j′δIcommi′,j′(t)\\begin{align} \\lambda_{c2w_{,j}} (t) & =     \\beta (t) \\cdot \\Phi_i(t) \\cdot \\sum_{'=0}^{'=N} CtoW_{,'} \\sum_{j'} \\delta Icomm_{',j'} (t) \\end{align} CtoWi,′CtoW_{,'} contact matrix specific consumers attending workplaces. total force infection acting susceptible individuals assumed addition . conciseness, can taken Λij(t)=λcommij(t)+λworkij(t)+λc2wi,j(t)\\begin{equation}     \\Lambda_{ij} (t) = \\lambda_{comm_{ij}} (t) + \\lambda_{work_{ij}} (t) + \\lambda_{c2w_{,j}} (t) \\end{equation} however, noted force infection within workplace λworkij(t)\\lambda_{work_{ij}} (t) column vector length 45, given number economic sector classes model, whilst λcommij(t)\\lambda_{comm_{ij}} (t) λc2wij(t)\\lambda_{c2w_{ij}} (t) length 49, encompassing age-sector classes.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"disease-transition-rates","dir":"Articles","previous_headings":"Epidemiological model > Model transition parameters","what":"Disease transition rates","title":"General model description","text":"(#tab:pathogendata) Pathogen parameters. different pathogen profile can created user generating list object specifying parameter values (see list structure pathogens daedalus.data::infection_data). *Note disease severity progression modelled competing rates (e.g., individuals IaIa compartment, recovery γIs\\gamma_{} vs hospitalisation age ηi\\eta^); NA values specified, assume individuals undergo respective disease severity transition.","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"vaccination","dir":"Articles","previous_headings":"Epidemiological model > Model transition parameters","what":"Vaccination","title":"General model description","text":"Vaccination implemented series default pre-determined vaccine investment scenarios, can modified necessary user. (#tab:vaccine) Vaccination parameters. pre-specified parameters can modified user /additional strategies can added generating list object structure (see daedalus.data::vaccination_scenario_data). *Note default version daedalus models vaccine efficacy infection; use cases added functionality simulate efficacy clinical severity end-points see Johnson et al. (2023).","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"economic-model","dir":"Articles","previous_headings":"","what":"Economic model","title":"General model description","text":"daedalus assigns monetary values years life lost (YLL) K1K_1, economic activity losses K2K_2 years education lost K3K_3. following sections describe methodology calculating losses. total socioeconomic loss (TSL) respiratory pandemic therefore given ","code":"TSL = K_1 + K_2 + K_3."},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"years-of-life-lost","dir":"Articles","previous_headings":"Economic model","what":"Years of life lost","title":"General model description","text":"estimate number years life lost age country using life tables Global Burden Disease Collaborative Network (2020). Formally, used life expectancy age country L̂\\hat{L}_i estimate life years lost deceased individuals given YLLi=∫t=0t∑jDi,j(t)dt⋅L̂.\\begin{equation} YLL^= \\int_{t=0}^t \\sum_{j} D_{,j}(t)dt \\cdot \\hat{L}_i. \\end{equation} use VSL approach estimate monetary value lives lost. VSL reflects individuals’ willingness trade wealth reduction mortality risk (Cutler Summers (2020)). Following standardised methods (Hammitt (2020);Ananthapavan et al. (2021);Robinson, Sullivan, Shogren (2021)), assume VSL USA adjust differences income elasticity country, assumed higher lower-income settings opportunity cost spending basic necessities becomes large incomes subsistence (Hammitt (2020)). Formally, country aa estimate VSL age VSLaiVSL_a^function GDP given VSLai=VSLUSAi(raGDPaGDPUSA)re\\begin{equation} VSL_a^= VSL_{USA}^\\left(r_a \\frac{GDP^}{GDP_{USA}}  \\right)^{r_e} \\end{equation} rar_a country’s conversion rate market exchange rate GDP purchasing power parity GDP, rer_e income elasticity, estimated OECD data Robinson, Sullivan, Shogren (2021). monetary value years life lost K1K_1 K1=∑iYLLi⋅VSLai.\\begin{equation} K_1 = \\sum_i YLL^\\cdot VSL_a^. \\end{equation}","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"economic-activity-losses","dir":"Articles","previous_headings":"Economic model","what":"Economic activity losses","title":"General model description","text":"calculate cost economic closures 45 kk sectors terms lost gross value added (GVA). daedalus runs continuous time, outputs calculated daily time steps. daily GDP generated country absence closures composed maximum daily GVA yk(t)y_k(t) sector kk. 1:1 mapping 45 economic sectors age-sector population strata ∈5:49i \\5:49. conciseness, section index economic sectors age-sector classes kk. Formally, maximum possible GDP generated Y0(t)Y_0(t) economic sectors mSm_S absence mandated closures (.e., result NPIs) time tt defined Y0(t)=∑k=1mSyk(t),\\begin{equation} Y_0(t)=\\sum_{k=1}^{m_S}y_k(t), \\end{equation} economic sectors contribute daily GVA yk(t)y_k(t). economic sector , however, affected closures given day, estimate GVA losses yk(t)=yk(0)⋅(1−κk(t))\\begin{equation} y_k(t) = y_k(0) \\cdot (1 - \\kappa_k(t)) \\end{equation} yk(0)y_k(0) respective sector’s daily GVA absence closure κk(t)\\kappa_k(t) relative openness (.e., 0 1, 0 completely open 1 completely closed). thus assume sectors contribute $0 USD GVA day tt completely closed. addition GVA losses closures, economic sectors can lose productivity whilst open given depletion workforce (.e., due self-isolation, sickness, hospitalisation death). xk(t)x_{k}(t) proportion workforce contributing economic production sector kk total workforce NkN_k day tt. workforce sector depleted, assume smaller fraction x̂j(t)\\hat{x}_{j}(t) available contribute production given x̂k(t)=xk(t)(1−∑j=01(Iaj,k(t)+Isj,k(t)+Hj,k(t)+Dj,k(t)Nk)).\\begin{equation} \\hat{x}_{k}(t) = x_{k}(t) \\left(1 - \\sum_{j=0}^{1} \\left( \\frac{Ia^{j,k}(t) + ^{j,k}(t) + H^{j,k}(t) + D^{j,k}(t)}{N_k} \\right) \\right). \\end{equation} total GDP generated time tt Y(t)=∑k=1mSyk(t)x̂k(t),\\begin{equation} Y(t) = \\sum_{k=1}^{m_S} y_k(t) \\hat{x}_{k}(t), \\end{equation} GDP loss compared maximum K2=∫t=0t(Y0(t)−Y(t))dt.\\begin{equation} K_2 = \\int_{t=0}^t \\left( Y_0(t) - Y(t) \\right)dt. \\end{equation}","code":""},{"path":"https://jameel-institute.github.io/daedalus/articles/info_model_description.html","id":"years-of-education-lost","dir":"Articles","previous_headings":"Economic model","what":"Years of education lost","title":"General model description","text":"monetise value school day VSDVSD country-specific parameter, previously done Psacharopoulos et al. (2021), given VSD=VPE⋅MAE⋅RYE365\\begin{equation} VSD = \\frac{VPE \\cdot MAE \\cdot RYE}{365} \\end{equation} MAEMAE mean annual earnings (estimated using GDP multiplied labour share income, Feenstra, Inklaar, Timmer (2015)), RYERYE rate return one year education, assumed fixed 0.08, VPEVPE yearly present value lost earnings given TODO: Rob, find reference daedalus code data calculated. country data files prepared saved following equation p12p^{12} technical appendix? please corroborate re-write correct form equation ace. Thanks! Thus, addition GVA losses closures, done economic sectors (see section ), estimate total education sector losses K3=∫t=0t(yedu(t)+Ni=2(t)⋅VSD⋅(1−κedu(t))⋅(1−π))dt\\begin{equation} K_3 = \\int_{t=0}^t \\left( y_{edu}(t) + N_{=2}(t) \\cdot VSD \\cdot (1 - \\kappa_{edu}(t)) \\cdot (1 - \\pi) \\right)dt \\end{equation} Ni=2(t)N_{=2}(t) number pupils available time tt (.e., population school-age infected, hospitalised deceased), π\\pi fixed parameter effectiveness remote education.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer. Patrick Doohan. Author. Robert Johnson. Author. Pablo Perez-Guzman. Author. Rich FitzJohn. Author. Emma Russell. Author. David Mears. Author. Katharina Hauck. Author. Abdul Latif Jameel Institute Disease Emergency Analytics. Funder. Imperial College Science, Technology Medicine. Copyright holder, funder.","code":""},{"path":"https://jameel-institute.github.io/daedalus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P, Doohan P, Johnson R, Perez-Guzman P, FitzJohn R, Russell E, Mears D, Hauck K (2025). daedalus: Model Health, Social, Economic Costs Pandemic. R package version 0.2.29, https://github.com/jameel-institute/daedalus.","code":"@Manual{,   title = {daedalus: Model Health, Social, and Economic Costs of a Pandemic},   author = {Pratik Gupte and Patrick Doohan and Robert Johnson and Pablo Perez-Guzman and Rich FitzJohn and Emma Russell and David Mears and Katharina Hauck},   year = {2025},   note = {R package version 0.2.29},   url = {https://github.com/jameel-institute/daedalus}, }"},{"path":"https://jameel-institute.github.io/daedalus/index.html","id":"daedalus-model-health-social-and-economic-costs-of-a-pandemic","dir":"","previous_headings":"","what":"Model Health, Social, and Economic Costs of a Pandemic","title":"Model Health, Social, and Economic Costs of a Pandemic","text":"daedalus implements integrated epidemiological economic model Haw et al. (2022).","code":""},{"path":"https://jameel-institute.github.io/daedalus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Health, Social, and Economic Costs of a Pandemic","text":"can install development version daedalus repository using pak package, Jameel Institute R-universe.","code":"# install.packages(\"pak\") pak::pak(\"jameel-institute/daedalus\", upgrade = FALSE)  # installation from R-universe install.packages(   \"daedalus\",    repos = c(     \"https://jameel-institute.r-universe.dev\", \"https://cloud.r-project.org\"   ) )"},{"path":"https://jameel-institute.github.io/daedalus/index.html","id":"installation-notes","dir":"","previous_headings":"Installation","what":"Installation notes","title":"Model Health, Social, and Economic Costs of a Pandemic","text":"daedalus active development. use version daedalus associated major milestones, install specific version list . IDM Thailand 2024: pak::pak(\"jameel-institute/daedalus@v0.1.0\") IfG workshop 2025 (real time modelling): pak::pak(\"jameel-institute/daedalus@v0.2.0\")","code":""},{"path":"https://jameel-institute.github.io/daedalus/index.html","id":"known-issues","dir":"","previous_headings":"Installation","what":"Known issues","title":"Model Health, Social, and Economic Costs of a Pandemic","text":"found following issues released versions: v0.1.0: Consumer-worker contacts correctly handled, leading higher faster epidemic peaks. v0.2.0: Consumer-worker contacts included model, leading lower later epidemic peaks. ‘recovered’ compartment include recoveries hospitalisation. Please use helper function get_epidemic_summary() get epidemic sizes.","code":""},{"path":"https://jameel-institute.github.io/daedalus/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Model Health, Social, and Economic Costs of a Pandemic","text":"model can run country territory country_names list passing country name function. automatically pulls country-specific demographic economic data, included package, model (see ‘Get started’ vignette details). Users can select infection parameters among seven epidemics caused directly-transmitted viral respiratory pathogens, stored stand-alone helper package daedalus.data. can called daedalus.data::infection_data, epidemic identifiers stored daedalus.data::epidemic_names. Users can override default country contact data epidemic-specific infection arguments passing custom classes daedalus(); see package website details. Users can also model implementation pandemic response measures: see documentation main model function daedalus(), vignette modelling interventions package website.","code":"library(daedalus)  # run model for Canada data <- daedalus(\"Canada\", \"influenza_1918\")  # get pandemic costs as a total in million dollars get_costs(data, \"total\") #> [1] 1049499  # disaggregate total for economic, education, and health costs get_costs(data, \"domain\") #>     economic    education   life_value   life_years  #>    26819.051     1669.422  1021010.561 22171782.001"},{"path":"https://jameel-institute.github.io/daedalus/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Model Health, Social, and Economic Costs of a Pandemic","text":"daedalus R implementation scenario model project economics pandemic preparedness. daedalus.data stand-alone helper R package handle input data daedalus model. purpose allow users flexibly manipulate change epidemiological economic data, without needing modify model .","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/reference/class_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent countries and territories for DAEDALUS — class_country","title":"Represent countries and territories for DAEDALUS — class_country","text":"Helper functions create work S3 class <daedalus_country> objects use daedalus(). objects store country parameters reuse methods easy parameter access editing, well processing raw country characteristics DAEDALUS model.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent countries and territories for DAEDALUS — class_country","text":"","code":"daedalus_country(   country,   parameters = list(contact_matrix = NULL, contacts_workplace = NULL,     contacts_consumer_worker = NULL),   group_working_age = NULL )  is_daedalus_country(x)  # S3 method for class 'daedalus_country' print(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent countries and territories for DAEDALUS — class_country","text":"country string giving country territory name, ISO2 ISO3 code; must among daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c daedalus.data::country_names. parameters optional named list country parameters allowed modified. Currently, users may pass contact matrix, workplace contacts, consumer-worker contact matrix. passed, default values accessed stored package data. group_working_age optional value age-group considered working-age group. Defaults 3, taken internal constant. x object <daedalus_country> class. ... parameters passed print().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Represent countries and territories for DAEDALUS — class_country","text":"daedalus_country() returns object S3 class <daedalus_country> is_daedalus_country() returns logical whether object <daedalus_country>. print.daedalus_country() invisibly returns <daedalus_country> object x. Called printing side-effects.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent countries and territories for DAEDALUS — class_country","text":"","code":"x <- daedalus_country(\"Canada\")  x #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5235823 5.014414 0.3169637 #> 5-19  0.5104463 8.7459756 6.322175 0.7948344 #> 20-64 0.4351641 1.6376280 7.821398 1.0350292 #> 65+   0.1187166 0.7488765 3.639207 1.5142917 #> • GNI (PPP $): 46050 #> • Hospital capacity: 7989  daedalus_country(   \"United Kingdom\",   parameters = list(contact_matrix = matrix(1, 4, 4)) ) #> <daedalus_country> #> • Name: United Kingdom #> • Demography: 3924490, 11762039, 39536463, and 12663012 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 #> • GNI (PPP $): 45870 #> • Hospital capacity: 26219  # check whether `x` is a <country> object is_daedalus_country(x) #> [1] TRUE  # assign class members # using set_data() set_data(x, contact_matrix = matrix(99, 4, 4)) #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]   99   99   99   99 #> [2,]   99   99   99   99 #> [3,]   99   99   99   99 #> [4,]   99   99   99   99 #> • GNI (PPP $): 46050 #> • Hospital capacity: 7989  # using assignment operators x$contact_matrix <- matrix(99, 4, 4) x #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]   99   99   99   99 #> [2,]   99   99   99   99 #> [3,]   99   99   99   99 #> [4,]   99   99   99   99 #> • GNI (PPP $): 46050 #> • Hospital capacity: 7989"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_daedalus_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and work with <daedalus_output> objects — class_daedalus_output","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"Create work <daedalus_output> objects Validate potential <daedalus_output> class object Check object <daedalus_output> class Print <daedalus_output> class objects","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_daedalus_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"","code":"as_daedalus_output(x)  validate_daedalus_output(x)  is_daedalus_output(x)  # S3 method for class 'daedalus_output' print(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_daedalus_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"x object <daedalus_output> class. ... used; added compatibility generic.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_daedalus_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"object <daedalus_output> class. Invisibly returns x; called primarily side effects erroring object satisfy <daedalus_output> class requirements. logical whether x <daedalus_output> class. None; called printing side effects.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent infection parameters for DAEDALUS — class_infection","title":"Represent infection parameters for DAEDALUS — class_infection","text":"Helper functions create work S3 class <daedalus_infection> objects use daedalus(). objects store infection parameters reuse methods easy parameter access editing, well processing raw infection characteristics DAEDALUS model.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent infection parameters for DAEDALUS — class_infection","text":"","code":"daedalus_infection(name, ...)  is_daedalus_infection(x)  # S3 method for class 'daedalus_infection' print(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent infection parameters for DAEDALUS — class_infection","text":"name epidemic name among daedalus.data::epidemic_names. Selecting epidemic automatically pulls infection parameters associated epidemic; stored packaged data daedalus.data::infection_data. Default infection parameters epidemics can -ridden passing named list .... ... parameters passed print(). x object <daedalus_infection> class.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Represent infection parameters for DAEDALUS — class_infection","text":"daedalus_infection() returns object S3 class <daedalus_infection>. is_daedalus_infection() returns logical whether object <daedalus_infection>. print.daedalus_infection() invisibly returns <daedalus_infection> object x. Called printing side-effects.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":"included-epidemics","dir":"Reference","previous_headings":"","what":"Included epidemics","title":"Represent infection parameters for DAEDALUS — class_infection","text":"Epidemics data available given (pathogen parentheses). string indicates name must passed name argument. \"sars_cov_1\": SARS 2004 (SARS-CoV-1), \"influenza_2009\": influenza 2009 (influenza H1N1), \"influenza_1957\": influenza 1957 (influenza H2N2), \"influenza_1918\": influenza 1918 (influenza H1N1), \"sars_cov_2_pre_alpha\": Covid-19 wild type (SARS-Cov-2 wild type), \"sars_cov_2_omicron\": Covid-19 Omicron (SARS-CoV-2 omicron), \"sars_cov_2_pre_delta\": (SARS-CoV-2 delta).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":"infection-parameters","dir":"Reference","previous_headings":"","what":"Infection parameters","title":"Represent infection parameters for DAEDALUS — class_infection","text":"infections following parameters, take default values stored package daedalus.data::infection_data. Users can pass custom values parameters arguments via .... r0: single numeric value basic reproduction value infection \\(R_0\\). sigma: single numeric value > 0.0 rate transition exposed compartment one two infectious compartments. p_sigma: single numeric value range \\([0.0, 1.0]\\) proportion infectious individuals also symptomatic. Asymptomatic individuals can different contribution force infection symptomatic individuals. epsilon: single numeric value relative contribution asymptomatic infectious individuals force infection (compared symptomatic individuals). gamma_Is: single numeric value recovery rate infectious individuals hospitalised. gamma_Ia: single numeric value recovery rate asymptomatic infection. ifr: numeric vector length N_AGE_GROUPS (4) age-specific infection fatality risk. eta: numeric vector length N_AGE_GROUPS (4) age-specific hospitalisation rate individuals infectious symptomatic. hfr: numeric vector length N_AGE_GROUPS (4) age-specific probability death conditional hospitalisation. gamma_H_recovery: single numeric value recovery rate hospitalised individuals. gamma_H_death: single numeric value death rate hospitalised individuals. rho: single numeric value rate infection-derived immunity wanes, returning individuals 'recovered' compartment 'susceptible' compartment.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_infection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent infection parameters for DAEDALUS — class_infection","text":"","code":"# make a <daedalus_infection> object with default parameter values daedalus_infection(\"sars_cov_1\") #> <daedalus_infection> #> • Epidemic name: sars_cov_1 #> • R0: 1.75 #> • sigma: 0.217 #> • p_sigma: 0.867 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.018, 0.082, 0.018, and 0.246 #> • hfr: 0.255, 0.255, 0.255, and 0.255 #> • gamma_Ia: 0.476 #> • gamma_Is: 0.25 #> • gamma_H_recovery: 0.044 #> • gamma_H_death: 0.05  # modify infection parameters R0 and immunity waning rate daedalus_infection(\"influenza_1918\", r0 = 2.5, rho = 0.01) #> <daedalus_infection> #> • Epidemic name: influenza_1918 #> • R0: 2.5 #> • sigma: 0.909 #> • p_sigma: 0.669 #> • epsilon: 0.58 #> • rho: 0.01 #> • eta: 0.073, 0.064, 0.02, and 0.152 #> • hfr: 0.125, 0.125, 0.125, and 0.125 #> • gamma_Ia: 0.4 #> • gamma_Is: 0.4 #> • gamma_H_recovery: 0.2 #> • gamma_H_death: 0.2"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_npi.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent non-pharmaceutical intervention strategies for DAEDALUS — class_npi","title":"Represent non-pharmaceutical intervention strategies for DAEDALUS — class_npi","text":"Helper functions create work S3 class <daedalus_npi> objects use daedalus(). objects store NPI parameters reuse methods easy parameter access editing, well processing raw NPI characteristics DAEDALUS model. NPIs must initialised associated country infection; used determine state-values (hospital capacity) incidence-prevalence ratio (IPR) NPI starts ends reactively.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_npi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent non-pharmaceutical intervention strategies for DAEDALUS — class_npi","text":"","code":"daedalus_npi(   name,   country,   infection,   openness = NULL,   start_time = 30,   duration = 60 )  is_daedalus_npi(x)  # S3 method for class 'daedalus_npi' print(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_npi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent non-pharmaceutical intervention strategies for DAEDALUS — class_npi","text":"name NPI strategy name among daedalus.data::closure_strategy_names, NA. Passing pre-defined strategy name automatically pulls openness parameters associated response strategy; stored packaged data daedalus.data::closure_strategy_data. Pass NA define custom response strategy passing vector openness. country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . infection infection parameter object class <daedalus_infection>, epidemic name data provided package; see daedalus.data::epidemic_names historical epidemics epidemic waves parameters available. Passing name string automatically accesses default parameters infection. Create pass <daedalus_infection> tweak infection parameters using daedalus_infection(). openness optional numeric vector values range \\([0, 1]\\), giving openness economic sector model. Expected length N_ECON_SECTORS (currently 45). start_time number days start epidemic NPI response begins. Must single number. Defaults 30. Passed time_on argument new_daedalus_response() via class constructor new_daedalus_npi(). duration maximum number days NPI response active, whether started passing start_time state threshold crossed. Defaults 60 days. x object tested printed <daedalus_npi>. ... daedalus_npi(), parameters passed new_daedalus_response(). print method, parameters passed print().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_npi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Represent non-pharmaceutical intervention strategies for DAEDALUS — class_npi","text":"Note NPIs reactive model state (.e., epidemic state), can trigger state conditions met.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_npi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent non-pharmaceutical intervention strategies for DAEDALUS — class_npi","text":"","code":"# for a school closure strategy daedalus_npi(\"school_closures\", \"GBR\", \"sars_cov_1\") #> <daedalus_npi/daedalus_response> #> NPI strategy: school_closures #> • Start time (days): 30 #> • Openness (mean prop.): 0.93 #> • Default duration (days): 60  # set custom openness daedalus_npi(   NA,   \"GBR\", \"sars_cov_1\",   openness = rep(0.1, 45) ) #> <daedalus_npi/daedalus_response> #> NPI strategy: custom #> • Start time (days): 30 #> • Openness (mean prop.): 0.1 #> • Default duration (days): 60"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the <daedalus_response> super-class and sub-classes — class_response","title":"Constructor for the <daedalus_response> super-class and sub-classes — class_response","text":"Constructor <daedalus_response> super-class sub-classes","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the <daedalus_response> super-class and sub-classes — class_response","text":"","code":"new_daedalus_response(   name,   class = response_class_names,   parameters = list(),   identifier = NA_character_,   id_flag = NA_integer_,   time_on = NA_real_,   duration = NA_real_,   id_state_on = NA_integer_,   value_state_on = NA_real_,   id_state_off = NA_integer_,   value_state_off = NA_real_,   root_state_on = 1L,   root_state_off = -1L,   id_time_log = NA_integer_ )  response_class_names  new_daedalus_behaviour()  new_daedalus_mortality()  is_daedalus_response(x)  validate_daedalus_response(x)"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_response.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Constructor for the <daedalus_response> super-class and sub-classes — class_response","text":"object class character length 4.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the <daedalus_response> super-class and sub-classes — class_response","text":"name Response name. eventually passed name argument C++ class daedalus::events::response. default super-class constructor; sub-class fixed name aid identifiability dust2 events outputs. class name sub-class created. May one \"daedalus_npi\", \"daedalus_vaccination\", \"daedalus_behaviour\", \"daedalus_mortality\". default argument, users forced specify class building constructor. parameters Sub-class parameters passed sub-class constructors. Defaults empty list aid development. identifier optional string giving name pre-defined response strategy. Sub-class constructors helper functions provide names handle cases strategy custom one. id_flag Index state-flag changed response . Typically auto-calculated sub-class constructor helper functions; see e.g. daedalus_vaccination(). time_on Intended numeric vector start times. duration Intended numeric vector durations. id_state_on Intended numeric vector compartment indices checked roots found launch event. check always performed sum state indices. value_state_on Intended numeric vector roots found change switch-like state-flag ''. check always performed sum state indices. id_state_off Intended numeric vector compartment indices checked roots found end event. value_state_off Intended numeric vector roots found change switch-like state-flag ''. root_state_on single integer, either 1 -1, whether state-dependent launch increasing decreasing root, respectively. Defaults 1 increasing root common use case. root_state_off single integer, either 1 -1, whether state-dependent end increasing decreasing root, respectively. Defaults -1 decreasing root common use case. id_time_log Intended single number state index start-time response stored. See also initial_flags(). attribute intended solely enable time-limitation state-triggers. x functions taking x, must object class <daedalus_response>, object validated class.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the <daedalus_response> super-class and sub-classes — class_response","text":"new_daedalus_response() returns <daedalus_response>. Since default value class, <daedalus_response> must also one sub-classes returned sub-class constructors: new_daedalus_npi(): <daedalus_npi>; new_daedalus_vax(): <daedalus_vax>; new_daedalus_behaviour(): <daedalus_behaviour>; new_daedalus_mortality(): <daedalus_mortality>.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"Helper functions create work S3 class <daedalus_vaccination> objects use daedalus(). objects store vaccination parameters reuse methods easy parameter access editing, well processing raw vaccination characteristics DAEDALUS model.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"","code":"daedalus_vaccination(   name,   country,   start_time = NULL,   rate = NULL,   uptake_limit = NULL,   efficacy = 50,   waning_period = 180 )  is_daedalus_vaccination(x)  # S3 method for class 'daedalus_vaccination' print(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/class_vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"name vaccination investment scenario name among daedalus.data::vaccination_scenario_names. Selecting epidemic automatically pulls vaccination parameters associated epidemic; stored packaged data daedalus.data::vaccination_scenario_data. country <daedalus_country> object 2- 3-character string can coerced <daedalus_country> (e.g. \"GBR\" United Kingdom). Used determine vaccination end. start_time number days start epidemic vaccination begins. Must single number. Defaults NULL start time taken vaccination scenarios specified name. Passed time_on argument new_daedalus_response() via class constructor new_daedalus_vaccination(). rate single number percentage total population can vaccinated day. converted proportion automatically within daedalus(). uptake_limit single number giving upper limit percentage population can vaccinated. limit reached, vaccination ends. Passed value_state_off argument new_daedalus_response() via class constructor new_daedalus_vaccination(). efficacy single number range [0, 100] giving efficacy vaccination preventing infection. value 0 indicates vaccinated individuals susceptible infection unvaccinated ones, 100 indicate completely non-leaky vaccination completely protects infection. waning_period single number representing number days average individual wanes vaccinated stratum unvaccinated stratum. individuals susceptible recovered compartments can wane vaccinated. x object tested printed <daedalus_vaccination>. ... daedalus_vaccination(), parameters passed new_daedalus_response(). print method, parameters passed print().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_vaccination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"Note vaccination ended reaching uptake_limit restart individuals wane vaccinated compartment.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/class_vaccination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"","code":"# for no advance vaccine investment in the UK daedalus_vaccination(\"none\", \"GBR\") #> <daedalus_vaccination/daedalus_response> #> Vaccine investment scenario: none #> • Start time (days): 365 #> • Rate (% per day): 0.143 #> • Uptake limit (%): 40 #> • Efficacy (%): 50 #> • Waning period (mean, days): 180  # modifying parameters during initialisation # set daily vaccination rate to 1.5% of population daedalus_vaccination(\"low\", \"GBR\", rate = 1.5) #> <daedalus_vaccination/daedalus_response> #> Vaccine investment scenario: low #> • Start time (days): 300 #> • Rate (% per day): 1.5 #> • Uptake limit (%): 50 #> • Efficacy (%): 50 #> • Waning period (mean, days): 180"},{"path":"https://jameel-institute.github.io/daedalus/reference/country_name_from_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get country name from arg — country_name_from_arg","title":"Get country name from arg — country_name_from_arg","text":"Function get supported country name given arg may country name may ISO2 ISO3 code. cases, function checks country identifier supported.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/country_name_from_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get country name from arg — country_name_from_arg","text":"","code":"country_name_from_arg(country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/country_name_from_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get country name from arg — country_name_from_arg","text":"country string country name, ISO2 ISO3 code.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/country_name_from_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get country name from arg — country_name_from_arg","text":"supported country name","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"daedalus: Model Health, Social, and Economic Costs of a Pandemic — daedalus-package","title":"daedalus: Model Health, Social, and Economic Costs of a Pandemic — daedalus-package","text":"Model health, education, economic costs directly transmitted respiratory virus pandemics, different scenarios prior vaccine investment reactive interventions, using 'DAEDALUS' integrated health-economics model adapted Haw et al. (2022) <doi.org/10.1038/s43588-022-00233-0>.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"daedalus: Model Health, Social, and Economic Costs of a Pandemic — daedalus-package","text":"Maintainer: Pratik Gupte p.gupte24@imperial.ac.uk (ORCID) Authors: Patrick Doohan (ORCID) Robert Johnson (ORCID) Pablo Perez-Guzman (ORCID) Rich FitzJohn (ORCID) Emma Russell David Mears Katharina Hauck (ORCID) contributors: Abdul Latif Jameel Institute Disease Emergency Analytics [funder] Imperial College Science, Technology Medicine [copyright holder, funder]","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"Run DAEDALUS model R. work progress.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"","code":"daedalus(   country,   infection,   response_strategy = NULL,   vaccine_investment = NULL,   response_time = 30,   response_duration = 365,   auto_social_distancing = c(\"off\", \"independent\", \"npi_linked\"),   initial_state_manual = NULL,   time_end = 600,   ... )"},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . infection infection parameter object class <daedalus_infection>, epidemic name data provided package; see daedalus.data::epidemic_names historical epidemics epidemic waves parameters available. Passing name string automatically accesses default parameters infection. Create pass <daedalus_infection> tweak infection parameters using daedalus_infection(). response_strategy string name response strategy followed, numeric length 45 (number economic sectors), <daedalus_npi> object. Defaults \"none\". response strategy active, economic contacts scaled using package data object daedalus.data::closure_strategy_data. vaccine_investment Either single string <daedalus_vaccination> object specifying vaccination parameters associated advance vaccine-investment scenario. Defaults NULL absolutely vaccination model. vaccination investment \"none\" indicates prior investment, model include vaccination beginning 1 year, low rate across age groups. accepted values \"low\", \"medium\" \"high\". See daedalus_vaccination() information. response_time single numeric value time days selected response activated. ignored response already activated hospitalisation threshold reached. Defaults 30 days. response_duration single integer-ish number gives number days activation NPI end. auto_social_distancing string giving option form spontaneous social distancing model, reduces infection transmission function daily deaths. See Details . initial_state_manual optional named list names p_infectious, p_asymptomatic, p_immune. p_infectious p_asymptomatic give proportion infectious symptomatic individuals age group economic sector. Defaults 1e-6 0.0 respectively. p_immune may single number range 0.0 <= p_immune <= 1.0 4-element vector range (number age groups model), proportion individuals population age group pre-existing immunity infection (reduced susceptibility). See Details . time_end integer-like value number timesteps return data. treated number days data returned day. Defaults 300 days. ... Optional arguments passed dust2::dust_ode_control().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"<daedalus_output> object infection string single <daedalus_infection> object. Otherwise, list <daedalus_output>s length infection list <daedalus_infection>s passed infection.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":"details-initial-state","dir":"Reference","previous_headings":"","what":"Details: Initial state","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"Users can pass following initial state parameters initial_state_manual: p_infectious: single numeric value range \\([0.0, 1.0]\\) giving proportion individuals age group economic sector initialised infectious. Defaults 1e-6, one every one million infectious. p_asymptomatic: single numeric value range \\([0.0, 1.0]\\) proportion initially infectious individuals considered asymptomatic. Defaults 0.0. p_immune: Either single number vector 4 elements (number age groups) range \\([0.0, 1.0]\\) proportion population (age group) considered pre-existing immunity. stop-gap implementation assumes one two cases: (1) vaccination intended model vaccine_investment NULL, susceptibility individuals pre-existing immunity 50%; (2) vaccination strategy specified, pre-existing immunity assumed prior rollout, susceptibility determined chosen vaccination strategy (1 - efficacy).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":"details-spontaneous-social-distancing","dir":"Reference","previous_headings":"","what":"Details: Spontaneous social distancing","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"three possible options behavioural module, given . Note major issue including model run (value \"\") leads substantially lower response costs, generally better health outcomes (lives lost), without accounting attendant economic social costs. , please treat option highly experimental. \"\": effect daily deaths infection transmissibility. default choice. \"independent\": Public-concern deaths reduces transmissibility, independent mandated responses. begins start simulation, continues simulation ends. \"npi_linked\": Public-concern deaths reduces transmissibility,  mandated response active. Note currently way end response triggered state, .e., NPI launched due hospital capacity breached.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"","code":"# country and infection specified by strings using default characteristics output <- daedalus(   \"Canada\", \"influenza_1918\" )  # country passed as <daedalus_country> with some characteristics modified country_x <- daedalus_country(   \"Canada\",   parameters = list(contact_matrix = matrix(5, 4, 4)) # uniform contacts ) output <- daedalus(country_x, \"influenza_1918\")  # with some infection parameters over-ridden by the user output <- daedalus(   \"United Kingdom\",   daedalus_infection(\"influenza_1918\", r0 = 1.3) )  # with default initial conditions over-ridden by the user output <- daedalus(   \"United Kingdom\", \"influenza_1918\",   initial_state_manual = list(p_infectious = 1e-3) )"},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for daedalus — daedalus_internal","title":"Internal function for daedalus — daedalus_internal","text":"Internal function daedalus","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for daedalus — daedalus_internal","text":"","code":"daedalus_internal(time_end, params, state, flags, ode_control, n_groups)"},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for daedalus — daedalus_internal","text":"list state values returned dust2::dust_unpack_state().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_multi_infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Run daedalus for multiple infection parameter sets — daedalus_multi_infection","title":"Run daedalus for multiple infection parameter sets — daedalus_multi_infection","text":"Run daedalus() multiple parameter sets, intended use case running model uncertainty infection parameters.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_multi_infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run daedalus for multiple infection parameter sets — daedalus_multi_infection","text":"","code":"daedalus_multi_infection(   country,   infection,   response_strategy = NULL,   vaccine_investment = NULL,   response_time = 30,   response_duration = 365,   auto_social_distancing = c(\"off\", \"independent\", \"npi_linked\"),   initial_state_manual = NULL,   time_end = 600,   ... )"},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_multi_infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run daedalus for multiple infection parameter sets — daedalus_multi_infection","text":"country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . infection list <daedalus_infection> objects. response_strategy string name response strategy followed, numeric length 45 (number economic sectors), <daedalus_npi> object. Defaults \"none\". response strategy active, economic contacts scaled using package data object daedalus.data::closure_strategy_data. vaccine_investment Either single string <daedalus_vaccination> object specifying vaccination parameters associated advance vaccine-investment scenario. Defaults NULL absolutely vaccination model. vaccination investment \"none\" indicates prior investment, model include vaccination beginning 1 year, low rate across age groups. accepted values \"low\", \"medium\" \"high\". See daedalus_vaccination() information. response_time single numeric value time days selected response activated. ignored response already activated hospitalisation threshold reached. Defaults 30 days. response_duration single integer-ish number gives number days activation NPI end. auto_social_distancing string giving option form spontaneous social distancing model, reduces infection transmission function daily deaths. See Details . initial_state_manual optional named list names p_infectious, p_asymptomatic, p_immune. p_infectious p_asymptomatic give proportion infectious symptomatic individuals age group economic sector. Defaults 1e-6 0.0 respectively. p_immune may single number range 0.0 <= p_immune <= 1.0 4-element vector range (number age groups model), proportion individuals population age group pre-existing immunity infection (reduced susceptibility). See Details . time_end integer-like value number timesteps return data. treated number days data returned day. Defaults 300 days. ... Optional arguments passed dust2::dust_ode_control().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_multi_infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run daedalus for multiple infection parameter sets — daedalus_multi_infection","text":"list <daedalus_output> objects.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/daedalus_multi_infection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run daedalus for multiple infection parameter sets — daedalus_multi_infection","text":"See details auto_social_distancing affects model documentation daedalus().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/dummy_npi.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy NPI — dummy_npi","title":"Dummy NPI — dummy_npi","text":"Dummy NPI","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/dummy_npi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy NPI — dummy_npi","text":"","code":"dummy_npi()"},{"path":"https://jameel-institute.github.io/daedalus/reference/dummy_npi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy NPI — dummy_npi","text":"<daedalus_npi> object intended effect; openness set 1.0, start time duration set NULL.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/dummy_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy vaccination — dummy_vaccination","title":"Dummy vaccination — dummy_vaccination","text":"efficacy dummy vaccination object set 50% stop-gap implementation pre-existing population immunity. scenarios 'true' vaccination scenario passed, matter. scenarios vaccination intended, allows individuals pre-existing immunity partially susceptible, still preventing model-time vaccinations rate set 0.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/dummy_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy vaccination — dummy_vaccination","text":"","code":"dummy_vaccination()"},{"path":"https://jameel-institute.github.io/daedalus/reference/dummy_vaccination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy vaccination — dummy_vaccination","text":"daedalus_vaccination object intended effect; vaccination rate efficacy set zero.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/econ_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Economic constants used in DAEDALUS — econ_constants","title":"Economic constants used in DAEDALUS — econ_constants","text":"Economic constants used DAEDALUS","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/econ_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Economic constants used in DAEDALUS — econ_constants","text":"","code":"edu_effectiveness_remote  edu_annual_ror  work_expected_years  earnings_loss_discount"},{"path":"https://jameel-institute.github.io/daedalus/reference/econ_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Economic constants used in DAEDALUS — econ_constants","text":"object class numeric length 1. object class numeric length 1. object class numeric length 1. object class numeric length 1.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/econ_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Economic constants used in DAEDALUS — econ_constants","text":"Daedalus model uses constants economic value calculations: edu_effectiveness_remote: effectiveness remote education. edu_annual_ror: rate return year education. work_expected_years: expected number years work school-age children. earnings_loss_discount: discounting rate used calculation lost earnings.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Epidemiological compartments and indices — epi_constants","title":"Epidemiological compartments and indices — epi_constants","text":"Names indices epidemiological compartments used DAEDALUS, reuse model code. duplication ease extracting indices named list, extracting names without call names().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epidemiological compartments and indices — epi_constants","text":"","code":"COMPARTMENTS  idx_COMPARTMENTS  N_EPI_COMPARTMENTS  i_EPI_COMPARTMENTS  N_MODEL_COMPARTMENTS  N_INFECTION_SUBSYSTEM"},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Epidemiological compartments and indices — epi_constants","text":"object class character length 9. object class list length 9. object class integer length 1. object class integer length 7. object class integer length 1. object class integer length 1.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epidemiological compartments and indices — epi_constants","text":"COMPARTMENTS returns character vector epidemiological compartment names. idx_COMPARTMENTS returns list compartment index. constants return integer values.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Epidemiological compartments and indices — epi_constants","text":"DAEDALUS 7 epidemiological compartments: susceptible, exposed, infectious symptomatic (\"infect_symp\"), infectious asymptomatic (\"infect_asymp\") , hospitalised, recovered, dead. 2 additional compartments track number new infections new hospitalisations.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_output_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"Functions quickly summarise timeseries data daedalus() provide daily values infections, hospitalisations, deaths, vaccinations, allowing grouping different strata.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_output_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"","code":"get_incidence(   data,   measures = c(\"infections\", \"hospitalisations\", \"deaths\"),   groups = NULL )  get_epidemic_summary(   data,   measures = c(\"infections\", \"hospitalisations\", \"deaths\"),   groups = NULL )  get_new_vaccinations(data, groups = NULL)"},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_output_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"data Either <data.frame> call get_data() <daedalus_output> object, object directly. measures character vector one following, passed get_incidence() get_epidemic_summary(): \"infections\", \"hospitalisations\" \"deaths\" measure return. Defaults returning three long format. get_daily_vaccinations() accept measures argument provides number daily vaccinations. groups optional character vector grouping variables correspond model strata. Defaults NULL gives incidence across whole population. Allowed groups correspond modelled strata: \"age_group\", \"vaccine_group\", \"econ_sector\". get_daily_vaccinations() accepts \"age_group\" \"econ_sector\".","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_output_helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"<data.frame> long format, one entry per model timestep, measure, group chosen. get_incidence() returns data frame number daily new infections, new hospitalisations, /new deaths groups specified groups. get_epidemic_summary() returns data frame total number value specified measure groups specified groups. get_daily_vaccinations() returns data frame columns number new daily vaccination combination groups provided. Columns groups added groups specified.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/epi_output_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"","code":"data <- daedalus(\"Canada\", \"sars_cov_1\")  # new infections new_infections <- get_incidence(data, \"infections\")  # epidemic summary get_epidemic_summary(   data,   groups = \"age_group\" ) #>    age_group       value                measure #> 1        0-4    64255.34           total_deaths #> 2       5-19   635713.94           total_deaths #> 3      20-64   532018.58           total_deaths #> 4        65+  1087862.54           total_deaths #> 5        0-4  3583411.89          epidemic_size #> 6       5-19  9358595.15          epidemic_size #> 7      20-64 29054539.79          epidemic_size #> 8        65+  7857628.27          epidemic_size #> 9        0-4   205467.64 total_hospitalisations #> 10      5-19  2001270.10 total_hospitalisations #> 11     20-64  1667510.52 total_hospitalisations #> 12       65+  3373868.96 total_hospitalisations  # get daily vaccinations daily_vaccinations <- get_new_vaccinations(data)"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate transmission parameter from infection and contact parameters — get_beta","title":"Calculate transmission parameter from infection and contact parameters — get_beta","text":"Calculate transmission parameter infection contact parameters","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate transmission parameter from infection and contact parameters — get_beta","text":"","code":"get_beta(infection, country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate transmission parameter from infection and contact parameters — get_beta","text":"infection <daedalus_infection> object. country <daedalus_country> object.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate transmission parameter from infection and contact parameters — get_beta","text":"single numeric value transmission parameter, denoted \\(\\beta\\).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get epidemic costs from a DAEDALUS model run — get_costs","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"Get epidemic costs DAEDALUS model run","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"","code":"get_costs(x, summarise_as = c(\"none\", \"total\", \"domain\"))"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"x <daedalus_output> object call daedalus(). summarise_as string among \"none\", \"total\", \"domain\", costs returned. Select \"none\", default, raw costs along overall domain-specific totals; \"total\" overall cost, \"domain\" total costs per domain; domains 'economic', 'education', 'life years'.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"list different cost values, including total cost. See Details information.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"total cost million dollars returned total_cost. comprised following costs.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"economic-costs","dir":"Reference","previous_headings":"","what":"Economic costs","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"three element list economic_cost_total, total costs pandemic impacts economic sectors, including costs lost gross value added (GVA) due pandemic-control restrictions closures (economic_cost_closures), pandemic-related absences due illness death (economic_cost_absences).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"educational-costs","dir":"Reference","previous_headings":"","what":"Educational costs","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"three element list education_cost_total, total costs pandemic impacts education due pandemic-control restrictions closures (education_cost_closures), pandemic-related absences due illness death (education_cost_absences).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"life-value-lost","dir":"Reference","previous_headings":"","what":"Life-value lost","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"four-element vector (number age groups) giving value life-years lost per age group. calculated life-expectancy age group times value statistical life, years assumed value.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"life-years-lost","dir":"Reference","previous_headings":"","what":"Life-years lost","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"four-element vector (number age groups) giving value life-years lost per age group. calculated life-expectancy age group times number deaths age group. quality adjustment applied.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_costs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"","code":"output <- daedalus(\"Canada\", \"influenza_1918\")  get_costs(output) #> $total_cost #> [1] 1651142 #>  #> $economic_costs #> $economic_costs$economic_cost_total #> [1] 35682.59 #>  #> $economic_costs$economic_cost_closures #> [1] 0 #>  #> $economic_costs$economic_cost_absences #> [1] 35682.59 #>  #> $economic_costs$sector_cost_closures #>  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [39] 0 0 0 0 0 0 0 #>  #> $economic_costs$sector_cost_absences #>  [1]  647.65539   56.67554 1147.03728  445.31635  248.25682  645.00256 #>  [7]   46.17035  199.54809  243.24310  208.25524  287.21111   99.44465 #> [13]  194.44262  145.76317  231.91534  280.29226  120.72997   77.01375 #> [19]  297.53826  352.48019  225.99676  317.43580  763.96732  196.18468 #> [25] 2645.52834 4296.04264  966.55736   32.24520  192.08673  424.41733 #> [31]  165.03155  914.73649  363.21530  681.80361  711.45540 2743.43593 #> [37] 4700.69253 1687.42845 1225.56992 2736.67017 2189.31966 2933.48646 #> [43]  311.86851  412.94223   59.80213 #>  #>  #> $education_costs #> $education_costs$education_cost_total #> [1] 2189.32 #>  #> $education_costs$education_cost_closures #> [1] 0 #>  #> $education_costs$education_cost_absences #> [1] 2189.32 #>  #>  #> $life_value_lost #> $life_value_lost$life_value_lost_total #> [1] 1613271 #>  #> $life_value_lost$life_value_lost_age #>      0-4     5-19    20-64      65+  #> 290122.8 648162.7 444888.8 230096.2  #>  #>  #> $life_years_lost #> $life_years_lost$life_years_lost_total #> [1] 35033019 #>  #> $life_years_lost$life_years_lost_age #>      0-4     5-19    20-64      65+  #>  6300170 14075194  9660994  4996661  #>  #>"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_daedalus_response_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model response times from dust2 output — get_daedalus_response_times","title":"Get model response times from dust2 output — get_daedalus_response_times","text":"Get model response times dust2 output","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_daedalus_response_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model response times from dust2 output — get_daedalus_response_times","text":"","code":"get_daedalus_response_times(output, time_end)"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_daedalus_response_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model response times from dust2 output — get_daedalus_response_times","text":"output dust2 output daedalus_internal(). time_end model end time, passed daedalus().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_daedalus_response_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model response times from dust2 output — get_daedalus_response_times","text":"list event start end times, closure periods, duration closure event, suitable <daedalus_output> object.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters from DAEDALUS classes — get_data","title":"Get parameters from DAEDALUS classes — get_data","text":"Generic methods S3 classes safely getting class parameters.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters from DAEDALUS classes — get_data","text":"","code":"# S3 method for class 'daedalus_country' get_data(x, to_get, ...)  # S3 method for class 'daedalus_infection' get_data(x, to_get, ...)  # S3 method for class 'daedalus_npi' get_data(x, to_get, ...)  # S3 method for class 'daedalus_npi' get_data(x, to_get, ...)  # S3 method for class 'daedalus_output' get_data(x, to_get = NULL, ...)  # S3 method for class 'daedalus_vaccination' get_data(x, to_get, ...)  get_data(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters from DAEDALUS classes — get_data","text":"x S3 class object daedalus package <daedalus_country> <infection> class. to_get string giving name element x return. ... <dynamic-dots> arguments class methods. Class methods currently support arguments.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters from DAEDALUS classes — get_data","text":"Returns member x, class preserved (e.g. numeric vector country \"demography\"). <daedalus_output> objects, returns model timeseries data element specified.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters from DAEDALUS classes — get_data","text":"","code":"# simple example of getting data country_A <- daedalus_country(\"United Kingdom\") get_data(country_A, \"demography\") #>      0-4     5-19    20-64      65+  #>  3924490 11762039 39536463 12663012   get_data(country_A, \"contact_matrix\") #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5379290 4.704999 0.2863619 #> 5-19  0.5131412 8.7339228 5.874591 0.7418483 #> 20-64 0.4670302 1.7476822 7.830182 1.0685802 #> 65+   0.1180517 0.7548304 3.531487 1.5212437  disease_x <- daedalus_infection(\"sars_cov_1\", r0 = 1.9) get_data(disease_x, \"r0\") #> [1] 1.9  # get model data output <- daedalus(\"Canada\", \"influenza_1918\") head(   get_data(output) ) #>   time   value age_group econ_sector vaccine_group compartment #> 1    0 1993132       0-4   sector_00  unvaccinated susceptible #> 2    1 1993131       0-4   sector_00  unvaccinated susceptible #> 3    2 1993129       0-4   sector_00  unvaccinated susceptible #> 4    3 1993126       0-4   sector_00  unvaccinated susceptible #> 5    4 1993120       0-4   sector_00  unvaccinated susceptible #> 6    5 1993109       0-4   sector_00  unvaccinated susceptible"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pandemic fiscal costs from a model run — get_fiscal_costs","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"helper function post-processes <daedalus_output> object calculate costs national government (fiscal costs) responding pandemic. Includes costs economic support, vaccinations given, NPIs administered implemented.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"","code":"get_fiscal_costs(   x,   support_level = 0.2,   price_vax = 1,   price_npi = 1,   uptake_npi = 1,   interest_rate = 4,   tax_rate = 35,   spending_rate = 45,   starting_debt = 0 )"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"x <daedalus_output> object. support_level proportion pandemic-related economic losses government compensates, proportion. price_vax per-dose price vaccination. price_npi per-day per-person price implementing pandemic response. May include costs testing masks. uptake_npi extent NPIs taken population; essentially number modifies (reduces) total cost implementing NPI. interest_rate annual interest rate government borrowing pandemic response. tax_rate annual mean tax rate economic output; used calculate government revenue. spending_rate annual mean rate public spending percentage GDP. starting_debt value national starting debt. Currently assumed zero country-specific data collected.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"two-element list giving: list fiscal_costs elements giving fiscal costs \\(\\text{TCG_t}\\) breakdown costs, well interest; list public_debt public debt \\(b_t\\), net baseline public spending, pandemic response costs, pandemic-impacted revenue.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"Default argument values intended representative. function intended called daedalus() parameters required compute fiscal costs may need bundled along model outputs. Note rates (interest rate, spending rate, tax rate) given annual percentages, simply divided 365 give daily rate.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":"public-spending","dir":"Reference","previous_headings":"","what":"Public spending","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"Spending calculated : \\(G_t = \\sigma(\\text{GVA}^* - \\text{GVA}_t) + Cv_t + Cp_t\\) \\(Cv_t\\) time-specific cost vaccination, calculated cost new vaccinations timestep: \\(P_v \\times \\delta V_t\\) . \\(Cp_t\\) time-specific cost implementing pandemic response, calculated \\(\\psi (\\bar N - D_t) P_p\\), \\(\\bar N - D_t\\) remaining number individuals population, \\(\\psi\\) proportion taking protection offered response. total cost public pandemic day pandemic assumed made borrowing, \\(\\text{TCG}_t = G_t + (1 + R_t^T) \\text{TCG}_{t - 1}\\), \\(R_t^T\\) daily rate interest paid borrowed amount. rate currently modelled constant time. total public debt end pandemic \\(b_t\\) sum total public spending pandemic \\(\\text{TCG}_t\\), existing day--day public spending \\(\\bar G\\) assumed fraction daily GDP \\(\\nu \\text{GDP}\\), existing debt owed due past daily spending, interest paid debt, less revenues collected \\(\\mu \\text{GVA}_{t-1}\\). daily GVA pre-pandemic GVA scaled available labour supply pandemic, taking account labour restrictions due illness-related absences deaths, response-related restrictions. GDP calculated sum sector-specific daily GVA, existing debt currently assumed zero included equation. \\(b_t = \\bar G + \\text{TCG}_{t-1} + (1 + R_{t-1}^T) b_{t-1} -   \\mu \\text{GVA}_{t-1} \\)","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_fiscal_costs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get pandemic fiscal costs from a model run — get_fiscal_costs","text":"","code":"# get fiscal costs for UK with SARS-CoV-2 # and both closures and vaccinations o <- daedalus(   \"GBR\", \"sars_cov_2_pre_alpha\",   \"economic_closures\", \"high\",   time_end = 100 ) fc <- get_fiscal_costs(o)  # also works when no closures are applied o <- daedalus(   \"CAN\", \"influenza_2009\",   time_end = 30 ) get_fiscal_costs(o) #> $fiscal_costs #> $fiscal_costs$fiscal_cost #>  [1] 0.000000e+00 8.774001e-05 1.732363e-04 2.886612e-04 4.542043e-04 #>  [6] 6.939264e-04 1.041577e-03 1.545872e-03 2.277542e-03 3.339404e-03 #> [11] 4.880950e-03 7.119506e-03 1.037097e-02 1.509446e-02 2.195724e-02 #> [16] 3.192901e-02 4.641897e-02 6.747487e-02 9.807233e-02 1.425350e-01 #> [21] 2.071446e-01 3.010267e-01 4.374359e-01 6.356191e-01 9.235136e-01 #> [26] 1.341650e+00 1.948782e+00 2.829981e+00 4.108224e+00 5.960848e+00 #> [31] 8.642689e+00 #>  #> $fiscal_costs$gva_support #>  [1] 8.774001e-05 8.453478e-05 1.135264e-04 1.623796e-04 2.347445e-04 #>  [6] 3.400459e-04 4.928809e-04 7.147282e-04 1.036903e-03 1.504950e-03 #> [11] 2.185066e-03 3.173438e-03 4.609837e-03 6.697363e-03 9.731148e-03 #> [16] 1.414004e-02 2.054720e-02 2.985802e-02 4.338789e-02 6.304756e-02 #> [21] 9.161205e-02 1.331103e-01 1.933893e-01 2.809288e-01 4.080157e-01 #> [26] 5.924288e-01 8.598430e-01 1.247229e+00 1.807603e+00 2.616516e+00 #> [31] 3.780682e+00 #>  #> $fiscal_costs$vax_support #>  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #>  #> $fiscal_costs$npi_support #> [1] 0 #>  #> $fiscal_costs$interest_value #> [1] 15.57916 #>  #>  #> $public_debt #> $public_debt$public_debt #>  [1]    0.0000  120.1919  241.7010  364.5417  488.7287  614.2768  741.2009 #>  [8]  869.5162  999.2380 1130.3818 1262.9636 1396.9993 1532.5054 1669.4986 #> [15] 1807.9961 1948.0160 2089.5768 2232.6985 2377.4024 2523.7121 2671.6542 #> [22] 2821.2600 2972.5666 3125.6206 3280.4814 3437.2273 3595.9638 3756.8355 #> [29] 3920.0433 4085.8687 4254.7082 #>  #> $public_debt$added_public_debt #> [1] 4254.708 #>  #>"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_life_years_lost.html","id":null,"dir":"Reference","previous_headings":"","what":"Get life-years lost by demographic group. — get_life_years_lost","title":"Get life-years lost by demographic group. — get_life_years_lost","text":"Get life-years lost demographic group.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_life_years_lost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get life-years lost by demographic group. — get_life_years_lost","text":"","code":"get_life_years_lost(output, groups = c(\"none\", \"age_group\"))"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_life_years_lost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get life-years lost by demographic group. — get_life_years_lost","text":"output <daedalus_output> object. groups Whether get life-years lost age group. Selecting \"none\" gives total life-years lost.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_life_years_lost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get life-years lost by demographic group. — get_life_years_lost","text":"<data.frame> number life-years lost, optionally per age-group.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_state_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a vector of state indices — get_state_indices","title":"Get a vector of state indices — get_state_indices","text":"helper function get vector state indices use response sub-class constructors.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_state_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a vector of state indices — get_state_indices","text":"","code":"get_state_indices(state_name, country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_state_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a vector of state indices — get_state_indices","text":"state_name state name string. country country <daedalus_country>. Needed correctly calculate number age economic sector groups.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_state_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a vector of state indices — get_state_indices","text":"vector numbers representing indices.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_lost_earnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the present value of lost earnings due to educational disruption — get_value_lost_earnings","title":"Calculate the present value of lost earnings due to educational disruption — get_value_lost_earnings","text":"Calculate present value lost earnings due educational disruption","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_lost_earnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the present value of lost earnings due to educational disruption — get_value_lost_earnings","text":"","code":"get_value_lost_earnings()"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_lost_earnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the present value of lost earnings due to educational disruption — get_value_lost_earnings","text":"single number (around 20) gives coefficient lost earnings.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_school_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the value of a school year — get_value_school_year","title":"Calculate the value of a school year — get_value_school_year","text":"Calculate value school year","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_school_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the value of a school year — get_value_school_year","text":"","code":"get_value_school_year(gni)"},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_school_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the value of a school year — get_value_school_year","text":"gni GNI per capita country. Must single value. See daedalus.data::country_gni values.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/get_value_school_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the value of a school year — get_value_school_year","text":"single value giving value school year given country GNI per capita expected work period 45 years.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/initial_flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial values for model flags — initial_flags","title":"Initial values for model flags — initial_flags","text":"Initial values model flags","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/initial_flags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial values for model flags — initial_flags","text":"","code":"initial_flags()"},{"path":"https://jameel-institute.github.io/daedalus/reference/initial_flags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial values for model flags — initial_flags","text":"vector initial flag values; flags initially set '' 0.0.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/input_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a class has expected names — input_checkers","title":"Check that a class has expected names — input_checkers","text":"Check class expected names","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/input_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a class has expected names — input_checkers","text":"","code":"assert_class_fields(x, expected_fields)"},{"path":"https://jameel-institute.github.io/daedalus/reference/input_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a class has expected names — input_checkers","text":"x object tested expected_fields class member names. expected_fields character vector expected class member names.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/input_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a class has expected names — input_checkers","text":"Invisibly returns x; primarily called side effects.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/make_initial_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a default initial state for DAEDALUS — make_initial_state","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"Function prepare model initial state. Assumes 1 every million individuals initially infected, 60% asymptomatic infections. affect actual probability asymptomatic infections simulation, property <daedalus_infection>.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/make_initial_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"","code":"make_initial_state(country, initial_state_manual)"},{"path":"https://jameel-institute.github.io/daedalus/reference/make_initial_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . initial_state_manual optional named list names p_infectious, p_asymptomatic, p_immune. p_infectious p_asymptomatic give proportion infectious symptomatic individuals age group economic sector. Defaults 1e-6 0.0 respectively. p_immune may single number range 0.0 <= p_immune <= 1.0 4-element vector range (number age groups model), proportion individuals population age group pre-existing immunity infection (reduced susceptibility). See Details .","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/make_initial_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"array many dimensions N_VACCINE_DATA_GROUPS (currently, 3); rows specify age economic groups, columns specify epidemiological compartments (including new infections hospitalisations), array layers hold information vaccination status (including new vaccinations).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/make_susc_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare susceptibility matrix for a vaccine-country pair — make_susc_matrix","title":"Prepare susceptibility matrix for a vaccine-country pair — make_susc_matrix","text":"Helper function prepare susceptibility matrix used internally modulate number infections vaccinated groups.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/make_susc_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare susceptibility matrix for a vaccine-country pair — make_susc_matrix","text":"","code":"make_susc_matrix(vaccination, country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/make_susc_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare susceptibility matrix for a vaccine-country pair — make_susc_matrix","text":"country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() .","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/make_susc_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare susceptibility matrix for a vaccine-country pair — make_susc_matrix","text":"matrix dimensions follows: Rows: number age economic groups country; Cols: number vaccination strata DAEDALUS model, given N_VAX_STRATA.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/model_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS model constants — model_constants","title":"DAEDALUS model constants — model_constants","text":"Frequently used values DAEDALUS model related model population structure. See also epi_constants constants specific epidemiological model.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/model_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS model constants — model_constants","text":"","code":"N_AGE_GROUPS  i_AGE_GROUPS  N_VACCINE_STRATA  N_VACCINE_DATA_GROUPS  AGE_GROUPS  i_WORKING_AGE  i_SCHOOL_AGE  N_ECON_SECTORS  i_ECON_SECTORS  i_EDUCATION_SECTOR  N_ECON_STRATA  i_NOT_WORKING  DIM_AGE_GROUPS  DIM_EPI_COMPARTMENTS  DIM_ECON_SECTORS  DIM_VACCINE_STRATA  i_UNVACCINATED_STRATUM  i_VACCINATED_STRATUM  i_NEW_VAX_STRATUM  VACCINE_GROUPS  N_OUTPUT_COLS  N_FLAGS  FLAG_NAMES"},{"path":"https://jameel-institute.github.io/daedalus/reference/model_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DAEDALUS model constants — model_constants","text":"object class integer length 1. object class integer length 4. object class integer length 1. object class integer length 1. object class character length 4. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 45. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class character length 3. object class integer length 1. object class integer length 1. object class character length 9.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/model_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS model constants — model_constants","text":"Values model constants.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/model_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DAEDALUS model constants — model_constants","text":"DAEDALUS model requires following values fixed. Number age groups: 4 Number vaccination strata: 2 Age group bins: 0-4 years, 5-19 years, 20-65 years (working age), 65+ years Index working-age age groups: 3; see AGE_GROUPS Number economic sectors: 45 Index individuals working layer 3D state tensor: 1 Number economic strata: 46; note always one number economic sectors, additional stratum work includes individuals working age, proportion working age individuals. Array dimension age groups: 1 Array dimension epidemiological compartments: 2 Array dimension economic sectors: 3 Array dimension vaccination strata: 4 Indices numbers key groups. Number state variables flags, switches, indicators.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/out_list_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape output data — out_list_to_df","title":"Reshape output data — out_list_to_df","text":"internal function help prepare_output() process lists data.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/out_list_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape output data — out_list_to_df","text":"","code":"out_list_to_df(output, new_vaccinations, timesteps, labels)"},{"path":"https://jameel-institute.github.io/daedalus/reference/out_list_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape output data — out_list_to_df","text":"output list-like object originating daedalus_internal() partially processed within prepare_output(). new_vaccinations list object new vaccination data origination daedalus_internal(). timesteps vector timesteps, typically starting 0. labels list labels applied data.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/out_list_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape output data — out_list_to_df","text":"<data.frame> suitable passing <daedalus_output> object.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Make large contact matrix for Cpp model. — prepare_contacts","title":"Make large contact matrix for Cpp model. — prepare_contacts","text":"Make large contact matrix Cpp model.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make large contact matrix for Cpp model. — prepare_contacts","text":"","code":"make_conmat_large(country)  make_work_contacts(country)  make_consumer_contacts(country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_contacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make large contact matrix for Cpp model. — prepare_contacts","text":"country <daedalus_country>.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_contacts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make large contact matrix for Cpp model. — prepare_contacts","text":"make_conmat_large() returns 49x49 contact matrix scaled size demography groups. make_work_contacts() returns 45-element vector (number economic sectors) scaled number workers per sector. make_consumer_contacts() returns 45x4 contact matrix row scaled number workers per sector. Dimensions number economic sectors number age groups.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare DAEDALUS data — prepare_output","title":"Prepare DAEDALUS data — prepare_output","text":"Convert DAEDALUS data long-format <data.frame>.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare DAEDALUS data — prepare_output","text":"","code":"prepare_output(output, country, timesteps)"},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare DAEDALUS data — prepare_output","text":"output Output daedalus_internal(), expected list. country <daedalus_country> object get data number demographic, economic, vaccine groups. timesteps numeric vector model timesteps.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare DAEDALUS data — prepare_output","text":"<data.frame> long 'tidy' format columns \"time\", \"age_group\", \"compartment\", \"econ_sector\", \"value\", age-group specific value number individuals economic sector epidemiological compartment timestep.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare DAEDALUS data — prepare_output","text":"45 economic sectors, given N_ECON_SECTORS, first 'sector' representing non-working individuals. age groups considered non-working first sector (children retirees), working-age individuals may distributed flexibly various economic sectors (including non-working).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare country parameters for model — prepare_parameters","title":"Prepare country parameters for model — prepare_parameters","text":"Generic prepare_parameters methods associated daedalus classes.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare country parameters for model — prepare_parameters","text":"","code":"# S3 method for class 'daedalus_country' prepare_parameters(x, ...)  # S3 method for class 'daedalus_infection' prepare_parameters(x, ...)  # S3 method for class 'daedalus_vaccination' prepare_parameters(x, ...)  prepare_parameters(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare country parameters for model — prepare_parameters","text":"x S3 object appropriate method. ... used; included compatibility methods.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare country parameters for model — prepare_parameters","text":"list parameters suitable DAEDALUS model. prepare_parameters.daedalus_country() returns country parameters, prepare_parameters.daedalus_infection() returns infection parameters.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_parameters.html","id":"country-parameters","dir":"Reference","previous_headings":"","what":"Country parameters","title":"Prepare country parameters for model — prepare_parameters","text":"Country contact data processed follows: contact_matrix: scaled leading eigenvalue, column j scaled j-th element country demography vector (.e., scaling contacts age group size group). returned parameter list consists : demography: demography vector; contact_matrix: contact matrix; contacts_workplace: contacts workplaces scaled number workers sector; contacts_consumer_worker: contacts workplaces distributed proportion demography distribution, scaled largest singular value (similar eigenvalue non-square matrices).","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/prepare_parameters.html","id":"infection-parameters","dir":"Reference","previous_headings":"","what":"Infection parameters","title":"Prepare country parameters for model — prepare_parameters","text":"Infection parameters returned <daedalus_infection> objects without modification name removed.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/set_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters in DAEDALUS classes — set_data","title":"Set parameters in DAEDALUS classes — set_data","text":"Generic methods S3 classes safely setting class parameters. parameters considered safe change – mostly contact data <country>, parameters <infection> – can changed way.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/set_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters in DAEDALUS classes — set_data","text":"","code":"# S3 method for class 'daedalus_country' set_data(x, ...)  # S3 method for class 'daedalus_infection' set_data(x, ...)  # S3 method for class 'daedalus_vaccination' set_data(x, ...)  set_data(x, ...)"},{"path":"https://jameel-institute.github.io/daedalus/reference/set_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters in DAEDALUS classes — set_data","text":"x S3 class object daedalus package <daedalus_country> <infection> class. ... <dynamic-dots> Named optional arguments parameters changed, new values. values allowed <daedalus_country> objects \"contact_matrix\", \"contacts_workplace\", \"contacts_consumer_worker\".","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/set_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters in DAEDALUS classes — set_data","text":"S3 object class input x.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/set_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parameters in DAEDALUS classes — set_data","text":"","code":"# simple example of setting all contacts to 1 country_A <- daedalus_country(\"United Kingdom\") country_A #> <daedalus_country> #> • Name: United Kingdom #> • Demography: 3924490, 11762039, 39536463, and 12663012 #> • Community contact matrix: #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5379290 4.704999 0.2863619 #> 5-19  0.5131412 8.7339228 5.874591 0.7418483 #> 20-64 0.4670302 1.7476822 7.830182 1.0685802 #> 65+   0.1180517 0.7548304 3.531487 1.5212437 #> • GNI (PPP $): 45870 #> • Hospital capacity: 26219  country_A <- set_data(country_A, contact_matrix = matrix(1, 4, 4)) country_A #> <daedalus_country> #> • Name: United Kingdom #> • Demography: 3924490, 11762039, 39536463, and 12663012 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 #> • GNI (PPP $): 45870 #> • Hospital capacity: 26219  disease_x <- daedalus_infection(\"sars_cov_1\") disease_x <- set_data(disease_x, r0 = 3.0) disease_x #> <daedalus_infection> #> • Epidemic name: sars_cov_1 #> • R0: 3 #> • sigma: 0.217 #> • p_sigma: 0.867 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.018, 0.082, 0.018, and 0.246 #> • hfr: 0.255, 0.255, 0.255, and 0.255 #> • gamma_Ia: 0.476 #> • gamma_Is: 0.25 #> • gamma_H_recovery: 0.044 #> • gamma_H_death: 0.05"},{"path":"https://jameel-institute.github.io/daedalus/reference/summary_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Model output measures and groups for summaries and derived time-series — summary_constants","title":"Model output measures and groups for summaries and derived time-series — summary_constants","text":"Model output measures groups summaries derived time-series","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/summary_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model output measures and groups for summaries and derived time-series — summary_constants","text":"","code":"SUMMARY_MEASURES  SUMMARY_GROUPS"},{"path":"https://jameel-institute.github.io/daedalus/reference/summary_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Model output measures and groups for summaries and derived time-series — summary_constants","text":"object class character length 3. object class character length 3.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions — tools","title":"Helper functions — tools","text":"Helper functions","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions — tools","text":"","code":"drop_null(x)  first(x)  last(x)  weighted_rowsums(x, weights)  interest_accumulation(principal, contribution, rate)"},{"path":"https://jameel-institute.github.io/daedalus/reference/tools.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper functions — tools","text":"weighted_rowsums() used get row-wise sums matrix column-wise multiplication vector weights.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/uptake_percent_to_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an uptake limit from a percentage to a number — uptake_percent_to_number","title":"Convert an uptake limit from a percentage to a number — uptake_percent_to_number","text":"Convert uptake limit percentage number","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/uptake_percent_to_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an uptake limit from a percentage to a number — uptake_percent_to_number","text":"","code":"uptake_percent_to_number(uptake_limit, country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/uptake_percent_to_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an uptake limit from a percentage to a number — uptake_percent_to_number","text":"uptake_limit single number giving upper limit percentage population can vaccinated. limit reached, vaccination ends. Passed value_state_off argument new_daedalus_response() via class constructor new_daedalus_vaccination(). country <daedalus_country> object 2- 3-character string can coerced <daedalus_country> (e.g. \"GBR\" United Kingdom). Used determine vaccination end.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/uptake_percent_to_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an uptake limit from a percentage to a number — uptake_percent_to_number","text":"single number giving total number individuals expected take vaccination. country NULL, function returns NULL.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_country_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate country input — validate_country_input","title":"Validate country input — validate_country_input","text":"Validate country input","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_country_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate country input — validate_country_input","text":"","code":"validate_country_input(x)"},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_country_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate country input — validate_country_input","text":"x object validated suitable input country argument daedalus().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_country_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate country input — validate_country_input","text":"<daedalus_country> object.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_infection_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and return infection input — validate_infection_input","title":"Validate and return infection input — validate_infection_input","text":"Validate return infection input","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_infection_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and return infection input — validate_infection_input","text":"","code":"validate_infection_input(x)  validate_infection_list_input(x)"},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_infection_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and return infection input — validate_infection_input","text":"x object validated input infection argument daedalus().","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_infection_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and return infection input — validate_infection_input","text":"validate_infection_input() returns <daedalus_infection>. validate_infection_list_input() returns list <daedalus_infection>s.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_npi_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate npi inputs — validate_npi_input","title":"Validate npi inputs — validate_npi_input","text":"Validate npi inputs","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_npi_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate npi inputs — validate_npi_input","text":"","code":"validate_npi_input(x, country, infection, response_time, response_duration)"},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_npi_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate npi inputs — validate_npi_input","text":"x object validated input vaccine_investment argument daedalus(). country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . infection infection parameter object class <daedalus_infection>, epidemic name data provided package; see daedalus.data::epidemic_names historical epidemics epidemic waves parameters available. Passing name string automatically accesses default parameters infection. Create pass <daedalus_infection> tweak infection parameters using daedalus_infection(). response_time single numeric value time days selected response activated. ignored response already activated hospitalisation threshold reached. Defaults 30 days. response_duration single integer-ish number gives number days activation NPI end.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_npi_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate npi inputs — validate_npi_input","text":"<daedalus_npi> object.","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_vaccination_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate vaccination inputs — validate_vaccination_input","title":"Validate vaccination inputs — validate_vaccination_input","text":"Validate vaccination inputs","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_vaccination_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate vaccination inputs — validate_vaccination_input","text":"","code":"validate_vaccination_input(x, country)"},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_vaccination_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate vaccination inputs — validate_vaccination_input","text":"x object validated input vaccine_investment argument daedalus(). country country territory object class <daedalus_country>, country territory name included package; see daedalus.data::country_names, country ISO2 ISO3 code; see daedalus.data::country_codes_iso2c daedalus.data::country_codes_iso3c. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() .","code":""},{"path":"https://jameel-institute.github.io/daedalus/reference/validate_vaccination_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate vaccination inputs — validate_vaccination_input","text":"<daedalus_vaccination> object.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0229","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.29","title":"daedalus 0.2.29","text":"patch version implements request UKHSA allow modelling pre-existing immunity placing proportion model population vaccinated stratum model initialisation, specifying p_immune initial_state_manual daedalus() daedalus_multi_infection(). See function documentation details (PR #118 reviewed @OliverPolhillUKHSA).","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0228","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.28","title":"daedalus 0.2.28","text":"patch makes small fix internal function prepare_data() make robust user-created country demography vectors vector names stripped. Timesteps now taken parent function daedalus() daedalus_multi_infection().","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0227","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.27","title":"daedalus 0.2.27","text":"IPR calculated using transmission rate β\\beta absence modifiers NPI spontaneous behavioural changes.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0226","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.26","title":"daedalus 0.2.26","text":"patch adds <daedalus_npi> class used store NPI response parameters. daedalus() now accepts objects inputs response_strategy. Changes <daedalus_response> super-class add optional string identifier identify pre-defined scenarios. Helper functions added new NPI class; Minor edits <daedalus_response> super-class accommodate NPI class; Minor edits <daedalus_vaccination>; C++ daedalus::inputs::read_response now reads <daedalus_response> class member name.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"notes-0-2-26","dir":"Changelog","previous_headings":"","what":"Notes","title":"daedalus 0.2.26","text":"version onwards, daedalus requires daedalus.data >= v0.0.3 provide data closure_strategy_names closure_strategy_data.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0225","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.25","title":"daedalus 0.2.25","text":"patch version adds use HFR hospital transition rates calculate competing rates within C++ code, previously handled daedalus.data.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"notes-0-2-25","dir":"Changelog","previous_headings":"","what":"Notes","title":"daedalus 0.2.25","text":"next step implement transitions H compartment conditional probabilities, rather competing rates. Previous versions daedalus rely daedalus.data old parameter sets now superseded. Please update daedalus.data version 0.0.2 intend continue working new version daedalus.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0224","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.24","title":"daedalus 0.2.24","text":"patch version implements changes <daedalus_response> super-class allows events end increasing decreasing roots state. mostly (currently ) help end vaccination specific number doses given . patch currently applies vaccination, events updated later. NOTE state-dependent events now minimum duration 7 days; prevent unexpected termination solver finds increasing decreasing root within single step, leading immediate event termination launch.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0223","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.23","title":"daedalus 0.2.23","text":"patch version adds function get_fiscal_costs() calculate costs governments pandemic response. calculated post-processing model run, given user-specified assumptions public spending, interest rates, tax rates.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0222","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.22","title":"daedalus 0.2.22","text":"patch version overhauls events represented handled R.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"breaking-changes-0-2-22","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"daedalus 0.2.22","text":"<daedalus_vaccination> now requires country specified uptake-limit can respected event (yet, see Notes PR #91).","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"other-changes-0-2-22","dir":"Changelog","previous_headings":"","what":"Other changes","title":"daedalus 0.2.22","text":"Adds <daedalus_response> S3 super-class R event sub-classes inherit; Adds daedalus::inputs namespace C++ function read response class R generate daedalus::events::response; Implements <daedalus_vaccination> inheriting <daedalus_response> passing C++ using read_response. Also changes <daedalus_vaccination> initialised account state-based event-ending.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"notes-0-2-22","dir":"Changelog","previous_headings":"","what":"Notes","title":"daedalus 0.2.22","text":"<daedalus_vaccination>s require changes daedalus::events::response allow event end increasing root (uptake-limit); now pre-existing mechanism used ensure uptake-limit respected.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0221","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.21","title":"daedalus 0.2.21","text":"patch version logs realised times events. events launched multiple times, start time updated. start times held special variables state. NPI start time used determine realised NPI end time testing duration, enables time-limitation state-triggered events. events fixed end time (NPI-linked social distancing). Added class member function make_duration_test class daedalus::events::response. Events now treated start time duration, rather end time. Note change makes likely short-duration state-triggered events launched multiple times single simulation run 600 days. result unpredictable closure durations cases, closures can launched breaching hospital capacity. Added class member function make_duration_test class daedalus::events::response. Updated get_daedalus_response_times() get_costs() correctly accommodate multiple closures. Updates input checking, output handling, tests, documentation time-limitations state-triggered events. Event data now included <daedalus_output> daedalus() daedalus_multi_infection(). daedalus::events::response member functions event condition checks now include check expected flag status prevent events change flag status. tests account new closure duration calculations due multiple epidemic peaks event launches.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0220","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.20","title":"daedalus 0.2.20","text":"Restored model functionality mortality increased hospital capacity exceeded. Added new flag state indicates whether hospital capacity exceeded ; Promoted hospital-capacity-exceeded mechanism full event launched ended state trigger; Updated daedalus::events::response class accept vector states sum state-triggers; Updated daedalus::events::response generate events known time state trigger; Fixed issue first seen PR #91 using 0.0 dummy null state values caused events trigger unexpectedly, now using R provided NA_REAL inst/dust/daedalus.cpp.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0219","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.19","title":"daedalus 0.2.19","text":"Implements new vignette technical description model.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0218","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.18","title":"daedalus 0.2.18","text":"Patch version correct erroneous book-keeping costs due absences closures; tests added check absence costs low.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0217","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.17","title":"daedalus 0.2.17","text":"Splits spontaneous social distancing linked NPIs, fixes bug specifying response = \"none\" left social distancing default. New argument auto_social_distancing daedalus() daedalus_multi_infection() allows feature , independent time, linked NPIs NPIs active.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0216","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.16","title":"daedalus 0.2.16","text":"Patch version allow passing list infection objects Daedalus model using new function daedalus_multi_infection(). helps model multiple different pandemics population, model uncertainty outcomes due uncertainty infection parameters single pandemic pathogen.daedalus_multi_infection() returns list output objects. Added vignette showing use daedalus_multi_infection(); Added functions cleanly handle inputs daedalus() daedalus_multi_infection(); functions used v0.1.0 removed.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0215","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.15","title":"daedalus 0.2.15","text":"Fixes construction initial model state.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0214","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.14","title":"daedalus 0.2.14","text":"patch renames daedalus2() daedalus(). references helper functions daedalus2() replaced daedalus() equivalents, . data moved package daedalus.data, imported .","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0213","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.13","title":"daedalus 0.2.13","text":"patch version replaces calls daedalus() daedalus2(); excludes equivalence tests. tests updated conform function signature daedalus2(); mostly related NPI triggering hospital threshold passed function.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0212","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.12","title":"daedalus 0.2.12","text":"patch version adds response_duration argument daedalus2(), tests time-limited responses.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0211","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.11","title":"daedalus 0.2.11","text":"patch version adds logging new vaccinations age economic group. daedalus2() now returns data new vaccinations compatible get_new_vaccinations(); new vaccinations stored vector size age + economic groups main state model flags; daedalus_ode zero new vaccinations - handled get_new_vaccinations(); daedalus2() accepts optional ODE control arguments dust2 via ...; Internal function prepare_output_cpp() accommodates new vaccination data output.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0210","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.10","title":"daedalus 0.2.10","text":"daedalus_ode class longer zeroes data compartments new infections new hospitalisations — handled pre-existing get_incidence() function. change reversed future rewrite get_incidence(); <daedalus_country> class takes argument group_working_age index working age group; <daedalus_output> class prints information country, epidemic, response; Added FLAG_NAMES variables dust2 output remove; Added internal function get_daedalus2_response_times() extract event data daedalus2_internal() <daedalus_output> class; daedalus2() returns <daedalus_output> class object similar daedalus(); Removed constants associated now-removed daedalus_rtm() function; Function prepare_output_cpp() rewritten handle output daedalus2_internal(); Updated tests classed output daedalus2(); Skipping tests vaccination start time data compatible class <daedalus_output>; switched future. Added continuous benchmarking daedalus2(); Updated vignette daedalus2() classed output.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-029","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.9","title":"daedalus 0.2.9","text":"Added public-concern social distancing daedalus2(), re-added daedalus(); reverses removal v0.2.3. functions equivalent: social-distancing active NPI active. Added filter NULL daedalus2() parameter collection step - helps remove parameters allows treating missing values meaningful indicator C++ code (0.0 can valid value many cases). Removed default response duration 60 days daedalus2() present daedalus() leading non-equivalence tests.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"breaking-changes-0-2-8","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"daedalus 0.2.8","text":"daedalus2() output type now two-element list event data included. Time-series data data. output type converted <daedalus_output> future versions. patch version implements response class better organise event handling. events can launched ended specific times, specific state variables crossing threshold values. triggers can controlled user R; others hard-coded C++: NPI response start time added argument daedalus2() similar daedalus(); NPI response starts hospital_threshold (country parameters) crossed; NPI response intended end incidence-prevalence ratio reaches recovery rate (asymptomatic infections); appear work solver jumps root. Vaccination start time can specified user vaccination object strategy; specific end triggers specified vaccination rate ν\\nu scaled within ODE RHS decline uptake limit reached.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"c-code-0-2-8","dir":"Changelog","previous_headings":"","what":"C++ code","title":"daedalus 0.2.8","text":"Added class response namespace daedalus::events general data structure lambda generator NPI vaccination events. Added response objects shared state hold event parameters previously floating around; reorganised parameter reading. Replaced contents events struct daedalus_ode class response member functions NPI vaccination objects. Removed state variables logging response start end times.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-027","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.7","title":"daedalus 0.2.7","text":"Added mechanism vaccination switched model start time specified users <daedalus_vaccination> object passed vaccine_investment argument; {dust2} events root-find time t = 0 — see linked PR. Internal function dummy_vaccination() allows creation <daedalus_vaccination> start time = 0 using internal class constructor. Vaccination class validator now accepts \"dummy\" valid vaccination strategy name. affected changes initial vaccination flag (parameters also set 0.0).","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-026","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.6","title":"daedalus 0.2.6","text":"version adds response strategy functionality, response start end implemented {dust2} events. Added dependency {dust2} branch mrc-6531;","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"parameter-preparation-0-2-6","dir":"Changelog","previous_headings":"","what":"Parameter preparation","title":"daedalus 0.2.6","text":"Country class returns hospital capacity population size; Vaccination class returns uptake limit start time.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"constants-and-flags-0-2-6","dir":"Changelog","previous_headings":"","what":"Constants and flags","title":"daedalus 0.2.6","text":"Added N_FLAGS constant initial_flags(). Flags implemented state variables. Flag relative positions state added constants header.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"helper-functions-0-2-6","dir":"Changelog","previous_headings":"","what":"Helper functions","title":"daedalus 0.2.6","text":"Renamed helper function daedalus::helpers::zero_which get_state_idx; Helper function daedalus::interventions::switch_by_flag added interventions helpers header; used switch vaccination rate implement NPIs.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"model-state-0-2-6","dir":"Changelog","previous_headings":"","what":"Model state","title":"daedalus 0.2.6","text":"Tracking incidence-prevalence ratio measure whether epidemic growing simpler alternative RtR_t; tracked state variable growth_flag.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"other-0-2-6","dir":"Changelog","previous_headings":"","what":"Other","title":"daedalus 0.2.6","text":"Added tests events; NOTE: Skipping test response ended epidemic shrinking solver jumps root; awaiting fix .","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-025","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.5","title":"daedalus 0.2.5","text":"Adds correction reducing eligibles vaccination daedalus2() re-implementing scale_nu() C++. Adds simple test vaccination uptake limit. Adds C++ headers types dimensions.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"breaking-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"daedalus 0.2.4","text":"vaccination class <daedalus_vaccination> renamed invariants. Workflows using custom vaccination regimes break. issues expected dashboard. daedalus now requires R > v3.5 (due use package data) — belated update.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"model-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Model changes","title":"daedalus 0.2.4","text":"daedalus2() supports infections vaccinated stratum similar daedalus(); vaccination now leaky. default absolutely vaccination, differs daedalus() ‘none’ refers advance investment; daedalus() takes vaccine efficacy waning period vaccine_investment argument, see ;","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"class-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Class changes","title":"daedalus 0.2.4","text":"<daedalus_vaccination> updated shorter invariants drop prefix vax names; <daedalus_vaccination>s now hold information vaccine efficacy (single value) waning period (single value); can modified using construction helper daedalus_vaccination() set_data() method; new prepare_parameters2() method vaccination class satisfy daedalus2();","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"other-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Other changes","title":"daedalus 0.2.4","text":"Tests vaccination working daedalus2(); Updated function documentation changes vaccination class. Code formatting using Air, added air.toml disabled commas_linter conflicts Air.","code":""},{"path":[]},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"breaking-changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"daedalus 0.2.3","text":"daedalus() longer includes auto-social distancing; check equivalence daedalus2(). re-added event-trigger mapping feature developed. daedalus2() implementation vaccination basic: vaccination begins model start time end, vaccination correct reducing eligible population, vaccination non-leaky","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"model-changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Model changes","title":"daedalus 0.2.3","text":"Added full DAEDALUS ODE structure daedalus_ode class daedalus2() – except events, auto-social distancing, excess mortality; daedalus2() accepts country infection similar daedalus(). daedalus2() takes vaccination arguments vaccination rate waning rate. Fixes consumer-worker contact scaling daedalus2(). daedalus_ode class uses Eigen::Tensor Eigen::Matrix numerical operations.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"c-code-0-2-3","dir":"Changelog","previous_headings":"","what":"C++ code","title":"daedalus 0.2.3","text":"Added inst/include/daedalus_constants.h model related constants; Added inst/include/daedalus_helpers.h function zero_which() return compartments zero.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"r-code-0-2-3","dir":"Changelog","previous_headings":"","what":"R code","title":"daedalus 0.2.3","text":"Added intermediate internal helper generic methods prepare_parameters2() make_initial_state2() use daedalus2().","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"other-0-2-3","dir":"Changelog","previous_headings":"","what":"Other","title":"daedalus 0.2.3","text":"Added tests output expectations fixed population size daedalus2(). Added tests equivalence daedalus() daedalus2(). Added function documentation updated replacement DAEDALUS vignette. Update .lintr lintr v3.2.0.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"dependencies-0-2-3","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"daedalus 0.2.3","text":"Now linking Rcpp RcppEigen cpp11eigen.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-022","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.2","title":"daedalus 0.2.2","text":"version adds support including contact matrices daedalus class object using FOI calculation.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-021","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.1","title":"daedalus 0.2.1","text":"patch version {daedalus} builds combining daedalus::daedalus() daedalus::daedalus_rtm(). Breaking changes daedalus_rtm() removed; please see installation instructions Readme install {daedalus} version provides ; {Rcpp} {RcppEigen} replaced {cpp11} {cpp11eigen}; Tests using daedalus_rtm() removed; Continuous benchmarking removed daedalus_rtm(). Changes dust2 implementation Dependencies {dust2} {monty} added; Added successor function daedalus2() replace daedalus(); Toy SEIR model flexible number demographic strata added inst/dust/daedalus.cpp; build full model; Infrastructure files updated changes ; Added small vignette check functionality; Added small header package header helper function zero_which() daedalus::helpers namespace identify compartments state zero zero_every().","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-020","dir":"Changelog","previous_headings":"","what":"daedalus 0.2.0","title":"daedalus 0.2.0","text":"minor version release {daedalus} adds real-time epidemic modelling functionality removing implementation vaccination vaccination-group infection pathways. intervening versions v0.1.0. NOTE: version following identified errors: Consumer--worker infections correctly handled leading later lower epidemic peaks expected. number recovered include recoveries hospitalisation. Changes Added new function daedalus_rtm() (real-time modelling) returns either <daedalus_output> object list . Rcpp backed using RcppEigen Boost Headers {BH} Boost odeint solvers; added Rcpp, RcppEigen, BH dependencies; Removes reactive intervention implementation lifting; instead single intervention economic sectors can passed implementation user-specified time-frame ; Allows NPI social contacts (basic scaling transmission rate β\\beta) economic sector NPI active (default 1.0 distancing); see arg social_distancing_mandate; Allows spontaneous social distancing mediated daily deaths turned (default); see arg auto_social_distancing; Allows passing 45-element numeric vector specifying sector-wise openness coefficients; Allows passing list <daedalus_infection> objects infection accommodate parameter uncertainty (case returns list <daedalus_output>); Hosptial capacity determines excess mortality activated; Initial state asumes 1 10 million infected. Added C++ code src/daedalus.cpp help ODE RHS, observer ODE system, looping parameter combinations, exposing C++ code R. Added functions help daedalus_rtm(): prepare_output_cpp() handle output Rcpp fn (returned list matrices); make_conmat_large() prepares 49 ×\\times 49 contact matrix C++ ODE RHS; make_work_contacts() make_consumer_contacts() scale contacts workers economic sectors – NN βSICM/N\\beta SI \\text{CM} / N. Package classes: <daedalus_country> now returns life expectancy vector; Package data: Exporting economic sector names; Exporting country-wise life-expectancy data; Added C++-model compartment names constant. Downstream functions: get_costs() returns life-years lost; values lives lost vector renamed life_value_lost get_life_years_lost() calculates life-years lost total deaths life-expectancy. Package infrastructure: Updated .Rbuildignore, .gitignore, .lintr, _pkgdown.yml, WORDLIST C++ code; Updated Readmes reflect package title scope; Added basic tests daedalus_rtm().","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-010","dir":"Changelog","previous_headings":"","what":"daedalus 0.1.0","title":"daedalus 0.1.0","text":"minor version release {daedalus} use IDM conference 2024. NOTE: version found following identified errors: Consumer--worker infections correctly handled leading higher epidemic peaks also occur sooner expected.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0024","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.24","title":"daedalus 0.0.24","text":"patch version adds vignette exploring effect parameter uncertainty overall pandemic costs, updates vignettes improves documentation.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0023","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.23","title":"daedalus 0.0.23","text":"patch corrects epidemic dynamics: Replaces R0R_0 force infection calculations transmission parameter β\\beta; Adds new function get_beta() calculate model β\\beta country infection (thanks @patcatgit); Corrects implementation r_eff() use model β\\beta; Corrects prepare_parameters.daedalus_country() provide appropriate contact matrix values; Adds tests check newly added functions. noticeable speed loss due repeated calls base::eigen() base::solve() r_eff().","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0022","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.22","title":"daedalus 0.0.22","text":"patch makes infection IFR values available DAEDALUS-relevant age group infection_data <daedalus_infection> objects name \"ifr\".","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0021","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.21","title":"daedalus 0.0.21","text":"patch updates corrects cost school closures adding lost earnings, simplifying assumptions single school-age cohort, school age children school, single value number expected work years, constant global value effectiveness remote education. Educational losses now function number school days lost closures, country per-capita GNI, number school-age children, effectiveness remote education, coefficient lost earnings. calculation replaces previous value educational losses, education sector GVA loss closure period. education sector GVA loss now added overall economic losses. Educational losses due absences still calculated GVA losses due worker absences, terms lost earnings students due student illness absence. Added internal function get_value_lost_earnings() get (constant) coefficient value earnings lost due lost education; Added internal function get_value_school_year() get value school year country GNI (gross national income per capita). Added package constants i_SCHOOL_AGE, edu_effectiveness_remote (0.33), edu_annual_ror (0.08), earnings_loss_discount (0.03)","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0020","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.20","title":"daedalus 0.0.20","text":"patch updates state variable daedalus() substantially reduce number compartments; empty compartments removed. improves speed model runs fewer derivatives calculate. State variable 3D array dimensions: c(49, 9, 3). working-age economic sectors added rows age-groups. Epidemiological compartments unchanged. third dimension holds data vaccination status, including new vaccinations. Helper functions updated support new state dimensions. RtR_t calculation r_eff() simplified proportional susceptible times R0R_0, pending accurate calculation. internal helper function prepare_output() refactored avoid use base::array2DF() remove dependency newer versions R. Removes unused -sector contacts force--infection calculations. Moves contact scaling parameter preparation stage reduce operations model run. Correctly sums total number infectious individuals community; previously, implementation resulted segregation economic sector.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0019","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.19","title":"daedalus 0.0.19","text":"patch adds functionality run daedalus() country argument passed one country_codes_iso2c country_codes_iso3c 2 3 letter ISO country codes.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0018","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.18","title":"daedalus 0.0.18","text":"patch adds logging daily new vaccinations provides output helper function, get_new_vaccinations(), get daily new vaccinations. Adds third layer fourth dimension state array hold new vaccinations; Adds new helper function values_to_state() convert vector state array; Updates number indexing operations disregard new data layer new vaccinations; Updates daedalus(), prepare_output() make_initial_state() account new vaccinations layer; Updates tests newly added functionality.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0017","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.17","title":"daedalus 0.0.17","text":"patch removes dual implementation levels response strategies. “elimination” strategy “high” implementation level, strategies keep “light” implementation level. daedalus() argument implementation_level removed. Tests documentation updated remove references implementation levels.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0016","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.16","title":"daedalus 0.0.16","text":"patch fixes issue vaccination start tied response_time; now correctly controlled vaccine investment level passed daedalus(). Added vax_switch manually turned stage 03 model (never turned ); Added test check vaccination scenario-defined start times; Added tests check vaccine investment levels control epidemic deaths.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0015","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.15","title":"daedalus 0.0.15","text":"patch fixes issue closures ended model runs closure began epidemic stopped growing. mostly affected edge cases countries large spare hospital capacity, relatively late response_times. cases closure end time assigned simulation end time, inflating costs related closures. fix: Prevents closures activated hospital_capacity trigger epidemic growing, even hospital capacity threshold crossed; Prevents closures activated response_time trigger epidemic growing stage 01 stage 02. Closures manually turned epidemic growing (Rt<1.0R_t < 1.0). Tests different response times check model behaves expected.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"miscellaneous-changes-0-0-15","dir":"Changelog","previous_headings":"","what":"Miscellaneous changes","title":"daedalus 0.0.15","text":"package now requires minimum R version >= v4.3 due use new function array2DF(); prepare_parameters.daedalus_country() now provides contact matrix scaled leading eigenvalue demography use r_eff().","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0014","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.14","title":"daedalus 0.0.14","text":"patch adds vaccine investment scenarios daedalus. model runs must now include assumption level advance vaccine investment, defaulting “none”. Added vaccine investment scenario related data: vaccination_scenario_data vaccination parameters, vaccination_scenario_names, vaccination_parameter_names. Added <daedalus_vaccination> S3 class hold vaccination parameters, along class infrastructure (print, get/set, prepare_parameters() methods). Added helper function daedalus_vaccination() return vaccination object corresponding four vaccine investment scenarios. Added tests vaccination class, model runs vaccination, updated documentation.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0013","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.13","title":"daedalus 0.0.13","text":"patch version adds ISO 3166 2- 3- character country codes countries country_names, package data country_codes_iso2c country_codes_iso3c.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0012","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.12","title":"daedalus 0.0.12","text":"patch version adds functions summarise model outputs (#30): get_incidence() provides per-timestep (daily) values one infections (symptomatic asymptomatic), hospitalisations (demand), deaths, disaggregated one following groups: age group, economic sector, vaccination status. get_epidemic_summary() provides total number individuals infected, hospitalised, dead, one groups, defaulting providing overall summary. model state variable now includes values tracking daily infections (susceptible exposed) daily hospitalisations. Basic tests added functions. Package data.table imported help model data output processing.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0011","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.11","title":"daedalus 0.0.11","text":"patch version corrects spare hospital capacity data using corrected versions raw hospital capacity data (#31). country_data country_names package data also updated. Thailand now available country.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-0010","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.10","title":"daedalus 0.0.10","text":"patch version adds basic vaccination functionality, controlled newly added vaccination_rate parameter daedalus() Vaccination starts response triggered, active even ‘closures’ scenario; Vaccination rate start time uniform across age groups; Vaccine-derived protection (reduced susceptibility) represented hard-coded parameter tau, waning protection also hard-coded represented parameter psi. Default values 0.5 1 / 270, respectively; RtR_t calculation r_eff() includes reduced susceptibility vaccinated individuals. Internal changes include: system state now represented 4-dimensional array, vaccination groups/strata 4th dimension (see package constant DIM_VACCINE_STRATA); ODE system updated include reduced susceptibility movements vaccination strata; Vaccination rate nu represented terms proportion total population, internal function scale_nu() increases nu number individuals eligible vaccination decreases. Added tests vaccination functionality.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-009","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.9","title":"daedalus 0.0.9","text":"patch version adds spontaneous social distancing mechanism model internal function get_distancing_coefficient(), modifies infection transmission rate based number new deaths. intention model public concern leads spontaneous reduction community social contacts. Social distancing independent specific response strategy chosen, active response strategy active. future, social distancing conditioned vaccination regime completion. Social distancing active ‘response’ scenario. Workplace contacts affected. Social distancing scales transmission rate value 1.0 (distancing) lower_limit (arbitrary value 0.2) using exponential decay function.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-008","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.8","title":"daedalus 0.0.8","text":"patch adds hospital capacity data two downstream effects. Spare hospital capacity data raw data file added inst/extdata. processing script generate intermediate dataset added data-raw/. number countries available data reduced 41. <daedalus_country> class objects now provide spare capacity data. call daedalus() now takes response_threshold country-specific hospital capacity default. Users can still pass custom value override package data. model’s mortality rate omega increased 1.6x total number hospitalisations exceed spare hospital capacity. implemented using switch hosp_switch mutable parameter, switch activation termination rolled event functions control closures. Added tests check hospital capacity expected effect.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-007","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.7","title":"daedalus 0.0.7","text":"patch adds functionality calculate pandemic costs using newly added function get_costs(). patch also adds life_value, list country-wise, age-specific values statistical life lost package data. changes: Data preparation scripts raw data used generate life_value data. Subsetting countries data available leaves 67 countries; Taiwan Hong Kong removed due lack life value data. <daedalus_output> now includes measure total simulation time useful future calculations percentage GDP loss. <daedalus_output> also returns openness coefficient vector associated model response strategy. Tests documentation changes form function docs vignette updates. Package data.table now imported use cost calculations. Package DESCRIPTION updated reflect scenario modelling rather optimisation.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-006","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.6","title":"daedalus 0.0.6","text":"patch adds <daedalus_infection> class represent hold infection parameter data daedalus(). Access, assignment, print methods also added, addition internal helpers as_country(). class tested newly added tests. changes: get_data(), set_data() prepare_parameters() generics now methods <daedalus_infection>s. Removes make_infection_parameters() favour prepare_parameters.infection(). daedalus() argument epidemic accepting epidemic name string changed argument infection accepting <daedalus_infection> objects epidemic names. Vignettes updated use <daedalus_infection> objects. Website reference page updated sections.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-005","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.5","title":"daedalus 0.0.5","text":"patch adds <daedalus_country> class represent country territory data daedalus(). Access, assignment, print methods also added, addition internal helpers as_daedalus_country(). class tested newly added tests. changes: Adds generic functions get_data(), set_data() prepare_parameters(), methods <daedalus_country> objects. Methods infection data also anticipated. Removes make_country_parameters() favour prepare_parameters.daedalus_country(). daedalus() accepts first argument either country name <daedalus_country>, longer accepts country_params_manual argument; changes country parameters made via class. make_initial_state() works <daedalus_country> objects instead country names. Since internal function support passing country string name. Vignettes updated show use <daedalus_country> objects.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-004","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.4","title":"daedalus 0.0.4","text":"patch adds basic pandemic response functionality (#15). functionality shown new vignette thresholded_interventions.Rmd. function signature daedalus() changed accept response_strategy, implementation_level, response_time, response_threshold arguments specify parameters. Sensible defaults strategy “none”, “light” implementation level strategies. model supports “none”, “economic closures”, “school closures”, “elimination” strategies, economic sector openness coefficients “light” “heavy” implementation strategies stored package data object closure_data. data-raw/closure_data.R file shows data generated raw data files provided EPPI added inst/extdata. Closures triggered response time reached, total hospitalisation reaching response threshold. state variable expanded one accommodate switch initially zero, changed one () response activated, back zero response ends. Responses currently end trigger effective R less 1.0. make_parameters() function split make_infect_parameters() make_country_parameters() clearer manageable. daedalus()-level override parameters originally implemented ... replaced three separate overrides: country_params_manual, infect_params_manual, initial_state_manual, users pass custom values. prepare_output() made internal; omits data non-working age groups economic sectors (always 0), pads sector numbers fit format sector_XX. Internal functions R effective calculations getting total hospitalisations, r_eff() get_hospitalisations() added. Closures implemented deSolve::events triggered rootfinding function, separate functions activation termination, implemented make_response_threshold_event() make_rt_end_event(). contacts_between_sectors now set 0.0, previously 1e-6. Added tests closure triggers expected effects; closure end points specifically tested.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-003","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.3","title":"daedalus 0.0.3","text":"patch version adds workplace infections epidemiological model, adds country demography data. Added worker--worker infections within sectors, consumer worker contacts (#9). Added package data: country_data (country demography data) economic_contacts (sector-wise contacts data). Note worker--worker contacts sectors currently takes dummy value expected used near future (#11). Modified daedalus::daedalus() take single required argument country name run model package data country contact matrices economic demographic data (#11). Users can still pass infection parameters via .... Made package function default_parameters() internal renamed make_parameters(); added internal helper function make_initial_state() quickly generate country-appropriate initial states. Added documentation tests modified function calls.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-002","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.2","title":"daedalus 0.0.2","text":"patch version adds basic epidemiological model (#7). Added model functions daedalus() (user-facing) .daedalus_ode() (internal) run simple age-stratified (4 age groups) SEIR-HD epidemiological model taken @robj411 https://github.com/robj411/p2_drivers, Added default model parameters default_parameters() correspond roughly pandemic influenza, Added prepare_output() prepare daedalus() output, Added tests functions, Updated package infrastructure: DESCRIPTION, NAMESPACE, WORDLIST, .Rbuildignore, _pkgdown.yml reference. Disabled undesirable_function_linter vignettes flags library() calls. Updated Readme added content ‘Get started’ vignette.","code":""},{"path":"https://jameel-institute.github.io/daedalus/news/index.html","id":"daedalus-001","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.1","title":"daedalus 0.0.1","text":"Initial package setup including GitHub Actions workflows code quality checks. Updated GH Actions workflows R CMD check (fails ‘NOTE’) code test coverage; Added linting, citation update, Readme rendering, license year update workflows; Added spellchecking known words list.","code":""}]
