[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Imperial College Science, Technology Medicine Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/daedalus.html","id":"representing-countries-and-territories","dir":"Articles","previous_headings":"","what":"Representing countries and territories","title":"Getting started with DAEDALUS","text":"model can run country territory included package data simply passing name daedalus(). country_names vector holds list country territory names data available. Passing country name directly leads model accessing country characteristics stored package data. modify country characteristics, example examine assumptions around changed contact patterns, users instead create object class <daedalus_country>, allows setting certain country characteristics custom values. class also allows users collect country data one place easily. package provides data Walker et al. (2020) country demography, country workforce per economic sector, social contacts age groups country_data. package also provides data Jarvis et al. (2024) workplace contacts economic sectors. datasets accessed internal functions reduce need user input.","code":"# get default values for Canada (chosen for its short name) daedalus_country(\"Canada\") #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5235823 5.014414 0.3169637 #> 5-19  0.5104463 8.7459756 6.322175 0.7948344 #> 20-64 0.4351641 1.6376280 7.821398 1.0350292 #> 65+   0.1187166 0.7488765 3.639207 1.5142917 #> Hospital capacity: 7989  # make a <daedalus_country> representing Canada # and modify contact patterns country_canada <- daedalus_country(   \"Canada\",   parameters = list(     contact_matrix = matrix(5, 4, 4) # uniform contacts across age groups   ) )  # print to examine; only some essential information is shown country_canada #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]    5    5    5    5 #> [2,]    5    5    5    5 #> [3,]    5    5    5    5 #> [4,]    5    5    5    5 #> Hospital capacity: 7989"},{"path":"/articles/daedalus.html","id":"representing-infection-parameters","dir":"Articles","previous_headings":"","what":"Representing infection parameters","title":"Getting started with DAEDALUS","text":"daedalus allows users quickly model one seven historical epidemics accessing infection parameters associated epidemics, stored package data. Epidemics associated infection parameters given package daedalus::epidemic_names. Users can pass epidemic names directly daedalus() use default infection parameters. modify infection parameters associated epidemic, users create <daedalus_infection> class Users can also override epidemic-specific infection parameter values creating <infection> class object. infection() class helper function details parameters included.","code":"daedalus::epidemic_names #> [1] \"sars_cov_1\"           \"influenza_2009\"       \"influenza_1957\"       #> [4] \"influenza_1918\"       \"sars_cov_2_pre_alpha\" \"sars_cov_2_omicron\"   #> [7] \"sars_cov_2_delta\" # not run output <- daedalus(\"Canada\", \"influenza_1918\") # SARS-1 (2004) but with an R0 of 2.3 daedalus_infection(\"sars_cov_1\", r0 = 2.3) #> <daedalus_infection> #> • Epidemic name: sars_cov_1 #> • R0: 2.3 #> • sigma: 0.217 #> • p_sigma: 0.867 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.018, 0.082, 0.018, and 0.246 #> • omega: 0.012, 0.012, 0.012, and 0.012 #> • gamma_Ia: 0.476 #> • gamma_Is: 0.25 #> • gamma_H: 0.034, 0.034, 0.034, and 0.034  # Influenza 1918 but with mortality rising with age daedalus_infection(\"influenza_1918\", omega = c(0.01, 0.02, 0.03, 0.1)) #> <daedalus_infection> #> • Epidemic name: influenza_1918 #> • R0: 2.5 #> • sigma: 0.909 #> • p_sigma: 0.669 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.073, 0.064, 0.02, and 0.152 #> • omega: 0.01, 0.02, 0.03, and 0.1 #> • gamma_Ia: 0.4 #> • gamma_Is: 0.4 #> • gamma_H: 0.175, 0.175, 0.175, and 0.175"},{"path":"/articles/daedalus.html","id":"representing-vaccine-investment-for-pandemic-preparedness","dir":"Articles","previous_headings":"","what":"Representing vaccine investment for pandemic preparedness","title":"Getting started with DAEDALUS","text":"daedalus includes vaccination response model. default response assumes advance, pre-pandemic investment vaccine specific pandemic-causing pathogen. scenario (vaccine_investment = \"none\") intended represent Covid-19 pandemic, assumes vaccine becomes available 1 year pandemic begins, slow roll , uptake low. parameters contained package data daedalus::vaccine_scenario_data, total four scenarios advance vaccine investment (“none”, “low”, “medium”, “high”). Vaccine investment scenarios can passed string daedalus() use default parameters scenario, <daedalus_vaccination> object using daedalus_vaccination(name, <PARAMETERS>) modify vaccination parameters.","code":"# the default vaccine investment scenario daedalus_vaccination(\"none\") #> <daedalus_vaccination> #> Advance vaccine investment: none #> • Start time (days): 365 #> • Rate (% per day): 0.143 #> • Uptake limit (%): 40"},{"path":"/articles/daedalus.html","id":"running-the-model","dir":"Articles","previous_headings":"","what":"Running the model","title":"Getting started with DAEDALUS","text":"Run model passing country infection arguments daedalus(). vaccine investment scenarios automatically assumed “none”. model runs 300 timesteps default; timesteps interpreted days since model parameters terms days. Plot data view epidemic curve.","code":"# simulate a Covid-19 wild type outbreak in Canada; using default parameters data <- daedalus(\"Canada\", \"sars_cov_2_pre_alpha\") data <- get_data(data) ggplot(   data[data$compartment == \"infect_symp\" & data$age_group == \"20-65\", ] ) +   geom_line(     aes(time, value, colour = econ_sector),     show.legend = FALSE   ) +   facet_wrap(     facets = vars(age_group)   )"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer. Imperial College Science, Technology Medicine. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P (2024). daedalus: Model health, social, economic costs pandemic using _DAEDALUS_. R package version 0.0.15, https://github.com/j-idea/daedalus.","code":"@Manual{,   title = {daedalus: Model health, social, and economic costs of a pandemic using _DAEDALUS_},   author = {Pratik Gupte},   year = {2024},   note = {R package version 0.0.15},   url = {https://github.com/j-idea/daedalus}, }"},{"path":"/index.html","id":"daedalus-optimise-economic-social-and-health-trade-offs-in-a-pandemic","dir":"","previous_headings":"","what":"Model health, social, and economic costs of a pandemic using _DAEDALUS_","title":"Model health, social, and economic costs of a pandemic using _DAEDALUS_","text":"daedalus implements integrated epidemiological economic model Haw et al. (2022).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model health, social, and economic costs of a pandemic using _DAEDALUS_","text":"can install development version daedalus GitHub using remotes package.","code":"# install.packages(\"remotes\") remotes::install_github(\"j-idea/daedalus\", upgrade = FALSE)"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Model health, social, and economic costs of a pandemic using _DAEDALUS_","text":"model can run country territory country_names list passing country name function. automatically pulls country-specific demographic economic data, included package, model (see ‘Get started’ vignette details). Users can select infection parameters among seven epidemics caused directly-transmitted viral respiratory pathogens, stored package daedalus::infection_data, epidemic identifiers stored daedalus::epidemic_names. Users can override default country contact data epidemic-specific infection arguments passing custom classes daedalus(); see package website details. Users can also model implementation pandemic response measures: see documentation main model function daedalus(), vignette modelling interventions package website.","code":"library(daedalus)  # run model for Canada data <- daedalus(\"Canada\", \"influenza_1918\")  # get pandemic costs as a total in million dollars get_costs(data, \"total\") #> [1] 436377.2  # disaggregate total for economic, education, and health costs get_costs(data, \"domain\") #>   economic  education life_years  #>  29758.631   2277.528 404341.003"},{"path":"/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Model health, social, and economic costs of a pandemic using _DAEDALUS_","text":"daedalus R implementation scenario model project economics pandemic preparedness.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Model health, social, and economic costs of a pandemic using _DAEDALUS_","text":"Haw, David J., Giovanni Forchini, Patrick Doohan, Paula Christen, Matteo Pianella, Robert Johnson, Sumali Bajaj, et al. 2022. “Optimizing Social Economic Activity Containing SARS-CoV-2 Transmission Using DAEDALUS.” Nature Computational Science 2 (4): 223–33. https://doi.org/10.1038/s43588-022-00233-0.","code":""},{"path":"/reference/class_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent countries and territories for DAEDALUS — class_country","title":"Represent countries and territories for DAEDALUS — class_country","text":"Helper functions create work S3 class <daedalus_country> objects use daedalus(). objects store country parameters reuse methods easy parameter access editing, well processing raw country characteristics DAEDALUS model.","code":""},{"path":"/reference/class_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent countries and territories for DAEDALUS — class_country","text":"","code":"daedalus_country(   name,   parameters = list(contact_matrix = NULL, contacts_workplace = NULL,     contacts_consumer_worker = NULL) )  is_daedalus_country(x)  # S3 method for class 'daedalus_country' print(x, ...)"},{"path":"/reference/class_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent countries and territories for DAEDALUS — class_country","text":"name string giving country territory name; must among country_names. parameters optional named list country parameters allowed modified. Currently, users may pass contact matrix, workplace contacts, consumer-worker contact matrix. passed, default values accessed stored package data. x object <daedalus_country> class. ... parameters passed print().","code":""},{"path":"/reference/class_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Represent countries and territories for DAEDALUS — class_country","text":"daedalus_country() returns object S3 class <daedalus_country> is_daedalus_country() returns logical whether object <daedalus_country>. print.daedalus_country() invisibly returns <daedalus_country> object x. Called printing side-effects.","code":""},{"path":"/reference/class_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent countries and territories for DAEDALUS — class_country","text":"","code":"x <- daedalus_country(\"Canada\")  x #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5235823 5.014414 0.3169637 #> 5-19  0.5104463 8.7459756 6.322175 0.7948344 #> 20-64 0.4351641 1.6376280 7.821398 1.0350292 #> 65+   0.1187166 0.7488765 3.639207 1.5142917 #> Hospital capacity: 7989  daedalus_country(   \"United Kingdom\",   parameters = list(contact_matrix = matrix(1, 4, 4)) ) #> <daedalus_country> #> • Name: United Kingdom #> • Demography: 3924490, 11762039, 39536463, and 12663012 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 #> Hospital capacity: 26219  # check whether `x` is a <country> object is_daedalus_country(x) #> [1] TRUE  # assign class members # using set_data() set_data(x, contact_matrix = matrix(99, 4, 4)) #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]   99   99   99   99 #> [2,]   99   99   99   99 #> [3,]   99   99   99   99 #> [4,]   99   99   99   99 #> Hospital capacity: 7989  # using assignment operators x$contact_matrix <- matrix(99, 4, 4) x #> <daedalus_country> #> • Name: Canada #> • Demography: 1993132, 5949109, 22966942, and 6832974 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]   99   99   99   99 #> [2,]   99   99   99   99 #> [3,]   99   99   99   99 #> [4,]   99   99   99   99 #> Hospital capacity: 7989"},{"path":"/reference/class_daedalus_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and work with <daedalus_output> objects — class_daedalus_output","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"Create work <daedalus_output> objects Validate potential <daedalus_output> class object Check object <daedalus_output> class Print <daedalus_output> class objects","code":""},{"path":"/reference/class_daedalus_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"","code":"as_daedalus_output(x)  validate_daedalus_output(x)  is_daedalus_output(x)  # S3 method for class 'daedalus_output' print(x, ...)"},{"path":"/reference/class_daedalus_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"x object <daedalus_output> class. ... used; added compatibility generic.","code":""},{"path":"/reference/class_daedalus_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and work with <daedalus_output> objects — class_daedalus_output","text":"object <daedalus_output> class. Invisibly returns x; called primarily side effects erroring object satisfy <daedalus_output> class requirements. logical whether x <daedalus_output> class. None; called printing side effects.","code":""},{"path":"/reference/class_infection.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent infection parameters for DAEDALUS — class_infection","title":"Represent infection parameters for DAEDALUS — class_infection","text":"Helper functions create work S3 class <daedalus_infection> objects use daedalus(). objects store infection parameters reuse methods easy parameter access editing, well processing raw infection characteristics DAEDALUS model.","code":""},{"path":"/reference/class_infection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent infection parameters for DAEDALUS — class_infection","text":"","code":"daedalus_infection(name, ...)  is_daedalus_infection(x)  # S3 method for class 'daedalus_infection' print(x, ...)"},{"path":"/reference/class_infection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent infection parameters for DAEDALUS — class_infection","text":"name epidemic name among epidemic_names. Selecting epidemic automatically pulls infection parameters associated epidemic; stored packaged data daedalus::infection_data. Default infection parameters epidemics can -ridden passing named list .... ... parameters passed print(). x object <daedalus_infection> class.","code":""},{"path":"/reference/class_infection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Represent infection parameters for DAEDALUS — class_infection","text":"daedalus_infection() returns object S3 class <daedalus_infection>. is_daedalus_infection() returns logical whether object <daedalus_infection>. print.daedalus_infection() invisibly returns <daedalus_infection> object x. Called printing side-effects.","code":""},{"path":[]},{"path":"/reference/class_infection.html","id":"included-epidemics","dir":"Reference","previous_headings":"","what":"Included epidemics","title":"Represent infection parameters for DAEDALUS — class_infection","text":"Epidemics data available given (pathogen parentheses). string indicates name must passed name argument. \"sars_cov_1\": SARS 2004 (SARS-CoV-1), \"influenza_2009\": influenza 2009 (influenza H1N1), \"influenza_1957\": influenza 1957 (influenza H2N2), \"influenza_1918\": influenza 1918 (influenza H1N1), \"sars_cov_2_pre_alpha\": Covid-19 wild type (SARS-Cov-2 wild type), \"sars_cov_2_omicron\": Covid-19 Omicron (SARS-CoV-2 omicron), \"sars_cov_2_pre_delta\": (SARS-CoV-2 delta).","code":""},{"path":"/reference/class_infection.html","id":"infection-parameters","dir":"Reference","previous_headings":"","what":"Infection parameters","title":"Represent infection parameters for DAEDALUS — class_infection","text":"infections following parameters, take default values stored package infection_data. Users can pass custom values parameters arguments via .... r0: single numeric value basic reproduction value infection \\(R_0\\). sigma: single numeric value > 0.0 rate transition exposed compartment one two infectious compartments. p_sigma: single numeric value range \\([0.0, 1.0]\\) proportion infectious individuals also symptomatic. Asymptomatic individuals can different contribution force infection symptomatic individuals. epsilon: single numeric value relative contribution asymptomatic infectious individuals force infection (compared symptomatic individuals). gamma_Is: single numeric value recovery rate infectious individuals hospitalised. gamma_Ia: single numeric value recovery rate asymptomatic infection. gamma_H: numeric vector length N_AGE_GROUPS (4) age-specific recovery rate individuals hospitalised. eta: numeric vector length N_AGE_GROUPS (4) age-specific hospitalisation rate individuals infectious symptomatic. omega: numeric vector length N_AGE_GROUPS (4) age-specific mortality rate individuals hospitalised. rho: single numeric value rate infection-derived immunity wanes, returning individuals 'recovered' compartment 'susceptible' compartment.","code":""},{"path":"/reference/class_infection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Represent infection parameters for DAEDALUS — class_infection","text":"","code":"# make a <daedalus_infection> object with default parameter values daedalus_infection(\"sars_cov_1\") #> <daedalus_infection> #> • Epidemic name: sars_cov_1 #> • R0: 1.75 #> • sigma: 0.217 #> • p_sigma: 0.867 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.018, 0.082, 0.018, and 0.246 #> • omega: 0.012, 0.012, 0.012, and 0.012 #> • gamma_Ia: 0.476 #> • gamma_Is: 0.25 #> • gamma_H: 0.034, 0.034, 0.034, and 0.034  # modify infection parameters R0 and immunity waning rate daedalus_infection(\"influenza_1918\", r0 = 2.5, rho = 0.01) #> <daedalus_infection> #> • Epidemic name: influenza_1918 #> • R0: 2.5 #> • sigma: 0.909 #> • p_sigma: 0.669 #> • epsilon: 0.58 #> • rho: 0.01 #> • eta: 0.073, 0.064, 0.02, and 0.152 #> • omega: 0.025, 0.025, 0.025, and 0.025 #> • gamma_Ia: 0.4 #> • gamma_Is: 0.4 #> • gamma_H: 0.175, 0.175, 0.175, and 0.175"},{"path":"/reference/class_vaccination.html","id":null,"dir":"Reference","previous_headings":"","what":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"Helper functions create work S3 class <daedalus_vaccination> objects use daedalus(). objects store vaccination parameters reuse methods easy parameter access editing, well processing raw vaccination characteristics DAEDALUS model.","code":""},{"path":"/reference/class_vaccination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"","code":"daedalus_vaccination(name, ...)  is_daedalus_vaccination(x)  # S3 method for class 'daedalus_vaccination' print(x, ...)"},{"path":"/reference/class_vaccination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"name vaccination investment scenario name among vaccination_scenario_names. Selecting epidemic automatically pulls vaccination parameters associated epidemic; stored packaged data daedalus::vaccination_scenario_data. Default vaccination parameters can -ridden passing named list .... ... parameters passed print(). x object <daedalus_vaccination> class.","code":""},{"path":"/reference/class_vaccination.html","id":"vaccination-parameters","dir":"Reference","previous_headings":"","what":"Vaccination parameters","title":"Represent vaccine investment scenarios for DAEDALUS — class_vaccination","text":"vax_start_time: number days start epidemic vaccination begins. Must single number. nu: single number percentage total population can vaccinated day. converted proportion automatically within daedalus(). vax_uptake_limit: single number giving upper limit percentage population can vaccinated. limit reached, vaccination rate nu set zero.","code":""},{"path":"/reference/closure_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pandemic response strategy data for DAEDALUS — closure_data","title":"Pandemic response strategy data for DAEDALUS — closure_data","text":"Coefficients openness economic sectors different pandemic response strategies. four strategies (including response), two levels implementation (\"heavy\" \"light\").","code":""},{"path":"/reference/closure_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pandemic response strategy data for DAEDALUS — closure_data","text":"","code":"closure_data"},{"path":[]},{"path":"/reference/closure_data.html","id":"closure-data","dir":"Reference","previous_headings":"","what":"closure_data","title":"Pandemic response strategy data for DAEDALUS — closure_data","text":"list 4 elements, corresponding pandemic response strategy, 2 elements (\"heavy\" \"light\") giving coefficients sector openness different levels implementation. none economic sectors fully open pandemic response. elimination Openness coefficients elimination strategy. economic_closures Openness coefficients strategy mostly economic closures. school_closures Openness coefficients strategy mostly school closures.","code":""},{"path":"/reference/closure_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pandemic response strategy data for DAEDALUS — closure_data","text":"Multiple sources; updated shortly. See processing details `data-raw/closure_data.R","code":""},{"path":"/reference/country_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Country demographic data for DAEDALUS — country_data","title":"Country demographic data for DAEDALUS — country_data","text":"Country-wise data demography, social contacts, workforce participation economic sectors, gross value added (GVA) per economic sector. Demography social contacts presented four bins: [0, 4], [5, 19], [20, 64], [65, ] (combining individuals aged 65 higher). Workforce participation presented counts assumed subset [20, 64] age-bin. GVA data presented terms million dollars per day. Note zero values worker participation data may reflect missing data particular sector.","code":""},{"path":"/reference/country_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country demographic data for DAEDALUS — country_data","text":"","code":"country_data"},{"path":[]},{"path":"/reference/country_data.html","id":"country-data","dir":"Reference","previous_headings":"","what":"country_data","title":"Country demographic data for DAEDALUS — country_data","text":"list 197 elements, corresponding recognised country territory. demography four value named vector number individuals demographic group. contact_matrix 16-element square matrix giving mean number social contacts individuals four age groups. workers 45-element vector giving number individuals economic sector included model. gva 45-element vector giving daily gross value added economic sector model, million dollars.","code":""},{"path":"/reference/country_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Country demographic data for DAEDALUS — country_data","text":"doi:10.1126/science.abc0035  OECD; see processing details `data-raw/country_data.R","code":""},{"path":"/reference/country_names_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Country names and ISO codes for DAEDALUS — country_names_codes","title":"Country names and ISO codes for DAEDALUS — country_names_codes","text":"Names character codes countries provided package. Note country names commonly used names may official names. country_names: Country names; country_codes_iso3c: ISO 3166 alpha 3 (3 character) codes; country_codes_iso2c: ISO 3166 alpha 2 (2 character) codes;","code":""},{"path":"/reference/country_names_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country names and ISO codes for DAEDALUS — country_names_codes","text":"","code":"country_names  country_codes_iso3c  country_codes_iso2c"},{"path":"/reference/country_names_codes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country names and ISO codes for DAEDALUS — country_names_codes","text":"Character vectors recognised country names, 3-character 2-character codes. object class character length 67. object class character length 67.","code":""},{"path":"/reference/country_names_codes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Country names and ISO codes for DAEDALUS — country_names_codes","text":"Country codes taken ISO 3166 specification generated country names using countrycode::countrycode().","code":""},{"path":"/reference/country_names_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Country names and ISO codes for DAEDALUS — country_names_codes","text":"","code":"country_names #>  [1] \"Argentina\"      \"Australia\"      \"Austria\"        \"Belgium\"        #>  [5] \"Brazil\"         \"Brunei\"         \"Bulgaria\"       \"Cambodia\"       #>  [9] \"Canada\"         \"Chile\"          \"China\"          \"Colombia\"       #> [13] \"Costa Rica\"     \"Croatia\"        \"Cyprus\"         \"Czechia\"        #> [17] \"Denmark\"        \"Egypt\"          \"Estonia\"        \"Ethiopia\"       #> [21] \"Finland\"        \"France\"         \"Germany\"        \"Greece\"         #> [25] \"Hungary\"        \"Iceland\"        \"India\"          \"Indonesia\"      #> [29] \"Ireland\"        \"Israel\"         \"Italy\"          \"Japan\"          #> [33] \"Kazakhstan\"     \"Laos\"           \"Latvia\"         \"Lithuania\"      #> [37] \"Luxembourg\"     \"Malaysia\"       \"Malta\"          \"Mexico\"         #> [41] \"Morocco\"        \"Myanmar\"        \"Netherlands\"    \"New Zealand\"    #> [45] \"Norway\"         \"Peru\"           \"Philippines\"    \"Poland\"         #> [49] \"Portugal\"       \"Romania\"        \"Russia\"         \"Rwanda\"         #> [53] \"Saudi Arabia\"   \"Singapore\"      \"Slovakia\"       \"Slovenia\"       #> [57] \"South Africa\"   \"South Korea\"    \"Spain\"          \"Sweden\"         #> [61] \"Switzerland\"    \"Thailand\"       \"Tunisia\"        \"Turkey\"         #> [65] \"United Kingdom\" \"United States\"  \"Vietnam\"         country_codes_iso3c #>  [1] \"ARG\" \"AUS\" \"AUT\" \"BEL\" \"BRA\" \"BRN\" \"BGR\" \"KHM\" \"CAN\" \"CHL\" \"CHN\" \"COL\" #> [13] \"CRI\" \"HRV\" \"CYP\" \"CZE\" \"DNK\" \"EGY\" \"EST\" \"ETH\" \"FIN\" \"FRA\" \"DEU\" \"GRC\" #> [25] \"HUN\" \"ISL\" \"IND\" \"IDN\" \"IRL\" \"ISR\" \"ITA\" \"JPN\" \"KAZ\" \"LAO\" \"LVA\" \"LTU\" #> [37] \"LUX\" \"MYS\" \"MLT\" \"MEX\" \"MAR\" \"MMR\" \"NLD\" \"NZL\" \"NOR\" \"PER\" \"PHL\" \"POL\" #> [49] \"PRT\" \"ROU\" \"RUS\" \"RWA\" \"SAU\" \"SGP\" \"SVK\" \"SVN\" \"ZAF\" \"KOR\" \"ESP\" \"SWE\" #> [61] \"CHE\" \"THA\" \"TUN\" \"TUR\" \"GBR\" \"USA\" \"VNM\"  country_codes_iso2c #>  [1] \"AR\" \"AU\" \"AT\" \"BE\" \"BR\" \"BN\" \"BG\" \"KH\" \"CA\" \"CL\" \"CN\" \"CO\" \"CR\" \"HR\" \"CY\" #> [16] \"CZ\" \"DK\" \"EG\" \"EE\" \"ET\" \"FI\" \"FR\" \"DE\" \"GR\" \"HU\" \"IS\" \"IN\" \"ID\" \"IE\" \"IL\" #> [31] \"IT\" \"JP\" \"KZ\" \"LA\" \"LV\" \"LT\" \"LU\" \"MY\" \"MT\" \"MX\" \"MA\" \"MM\" \"NL\" \"NZ\" \"NO\" #> [46] \"PE\" \"PH\" \"PL\" \"PT\" \"RO\" \"RU\" \"RW\" \"SA\" \"SG\" \"SK\" \"SI\" \"ZA\" \"KR\" \"ES\" \"SE\" #> [61] \"CH\" \"TH\" \"TN\" \"TR\" \"GB\" \"US\" \"VN\""},{"path":"/reference/daedalus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"daedalus: Model health, social, and economic costs of a pandemic using _DAEDALUS_ — daedalus-package","title":"daedalus: Model health, social, and economic costs of a pandemic using _DAEDALUS_ — daedalus-package","text":"Model health, social, economic costs directly transmitted respiratory virus pandemics, different scenarios preparedness reactive interventions, using _DAEDALUS_ integrated health-economics model adapted Haw et al. (2022) <doi.org/10.1038/s43588-022-00233-0>.","code":""},{"path":[]},{"path":"/reference/daedalus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"daedalus: Model health, social, and economic costs of a pandemic using _DAEDALUS_ — daedalus-package","text":"Maintainer: Pratik Gupte p.gupte24@imperial.ac.uk (ORCID) contributors: Imperial College Science, Technology Medicine [copyright holder]","code":""},{"path":"/reference/daedalus.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"Run DAEDALUS model R. work progress.","code":""},{"path":"/reference/daedalus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"","code":"daedalus(   country,   infection,   response_strategy = c(\"none\", \"elimination\", \"economic_closures\", \"school_closures\"),   implementation_level = c(\"light\", \"heavy\"),   vaccine_investment = c(\"none\", \"low\", \"medium\", \"high\"),   response_time = 30,   response_threshold = NULL,   initial_state_manual = list(),   time_end = 600,   ... )"},{"path":"/reference/daedalus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"country country territory object class <daedalus_country>, country territory name included package; see country_names. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . infection infection parameter object class <infection>, epidemic name data provided package; see epidemic_names parameters historical epidemic epidemic wave. Passing name string automatically accesses default parameters infection. Create pass <daedalus_infection> tweak infection parameters. response_strategy string name response strategy followed; defaults \"none\". response strategy determines country-specific response threshold following response activated. See response_threshold. response strategy active, economic contacts scaled using package data object daedalus::closure_data. implementation_level string level strategy implemented; defaults \"light\". vaccine_investment Either single string <daedalus_vaccination> object specifying vaccination parameters associated advance vaccine-investment scenario. Defaults \"none\", advance vaccine investment. case, vaccination begins 365 days (1 year) simulation begins, low rate across age groups. accepted values \"low\", \"medium\" \"high\". See daedalus_vaccination() information. response_time single numeric value time days selected response activated. ignored response already activated hospitalisation threshold reached. Defaults 30 days. response_threshold single numeric value total number hospitalisations causes epidemic response (specified response_strategy) triggered, already triggered via response_time. Currently defaults NULL, country-specific spare hospital capacity value used country_data. Pass number override default country-specific threshold value. initial_state_manual optional named list names p_infectious p_asymptomatic proportion infectious symptomatic individuals age group economic sector. Defaults 1e-6 0.0 respectively. time_end integer-like value number timesteps return data. treated number days data returned day. Defaults 300 days. ... arguments passed ODE solver; passed deSolve::ode().","code":""},{"path":"/reference/daedalus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"<deSolve> object.","code":""},{"path":[]},{"path":"/reference/daedalus.html","id":"initial-state","dir":"Reference","previous_headings":"","what":"Initial state","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"Users can pass following initial state parameters initial_state_manual: p_infectious: single numeric value range \\([0.0, 1.0]\\) giving proportion individuals age group economic sector initialised infectious. Defaults 1e-6, one every one million infectious. p_asymptomatic: single numeric value range \\([0.0, 1.0]\\) proportion initially infectious individuals considered asymptomatic. Defaults 0.0.","code":""},{"path":"/reference/daedalus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"","code":"# country and infection specified by strings using default characteristics output <- daedalus(   \"Canada\", \"influenza_1918\" )  # country passed as <daedalus_country> with some characteristics modified country_x <- daedalus_country(   \"Canada\",   parameters = list(contact_matrix = matrix(5, 4, 4)) # uniform contacts ) output <- daedalus(country_x, \"influenza_1918\")  # with some infection parameters over-ridden by the user output <- daedalus(   \"United Kingdom\",   daedalus_infection(\"influenza_1918\", r0 = 1.3) )  # with default initial conditions over-ridden by the user output <- daedalus(   \"United Kingdom\", \"influenza_1918\",   initial_state_manual = list(p_infectious = 1e-3) )"},{"path":"/reference/daedalus_rhs.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS system of ODEs — daedalus_rhs","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"compartmental epidemiological model four age groups. function intended passed solvers deSolve package. work progress additional components added future.","code":""},{"path":"/reference/daedalus_rhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"","code":"daedalus_rhs(t, state, parameters)"},{"path":"/reference/daedalus_rhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"t single double value time. state Vector initial state. form vector \\(X_i, X \\S, E, I_s, I_a, R, H, D\\), values compartments age group \\(\\) given consecutively. May matrix allow multiple age groups. See daedalus() explanation epidemiological compartments. parameters List parameters used simulation. See daedalus() list model parameters.","code":""},{"path":"/reference/daedalus_rhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"list single numeric vector size state, suitable output deSolve functions deSolve::lsoda().","code":""},{"path":"/reference/daedalus_rhs.html","id":"details-daedalus-model","dir":"Reference","previous_headings":"","what":"Details: DAEDALUS model","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"section work progress, describes DAEDALUS model brief. model age-stratified, supports heterogeneity social contacts age groups, currently supports four age groups.","code":""},{"path":"/reference/daedalus_rhs.html","id":"epidemiological-model","dir":"Reference","previous_headings":"","what":"Epidemiological model","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"model following epidemiological compartments: susceptible (\\(S\\)), exposed (\\(E\\)), infectious symptomatic (\\(I_s\\)), infectious asymptomatic (\\(I_a\\)), hospitalised (\\(H\\)), recovered (\\(R\\)), dead (\\(D\\)). model currently allows uniform parameters transitions compartments. Group specific parameters expected supported future.","code":""},{"path":"/reference/economic_contacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Economic sector contacts data for DAEDALUS — economic_contacts","title":"Economic sector contacts data for DAEDALUS — economic_contacts","text":"Data per-capita social contacts within economic sector DAEDALUS model.","code":""},{"path":"/reference/economic_contacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Economic sector contacts data for DAEDALUS — economic_contacts","text":"","code":"economic_contacts"},{"path":[]},{"path":"/reference/economic_contacts.html","id":"economic-contacts","dir":"Reference","previous_headings":"","what":"economic_contacts","title":"Economic sector contacts data for DAEDALUS — economic_contacts","text":"list two elements: contacts_workplace numeric vector N_ECON_SECTORS (45) elements, giving per-capita contacts workers within economic sector. contacts_between_sectors square matrix values set \\(10^{-6}\\), diagonal set zero, number contacts workers across economic sectors.","code":""},{"path":"/reference/economic_contacts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Economic sector contacts data for DAEDALUS — economic_contacts","text":"Adapted doi:10.1016/j.epidem.2024.100778 ; see processing details `data-raw/economic_contacts.R","code":""},{"path":"/reference/epi_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Epidemiological compartments and indices — epi_constants","title":"Epidemiological compartments and indices — epi_constants","text":"Names indices epidemiological compartments used DAEDALUS, reuse model code.","code":""},{"path":"/reference/epi_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epidemiological compartments and indices — epi_constants","text":"","code":"COMPARTMENTS  N_MODEL_COMPARTMENTS  N_EPI_COMPARTMENTS  N_DATA_COMPARTMENTS  i_EPI_COMPARTMENTS  i_DATA_COMPARTMENTS  i_S  i_E  i_Is  i_Ia  i_H  i_R  i_D  i_dE  i_dH  i_dD"},{"path":"/reference/epi_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Epidemiological compartments and indices — epi_constants","text":"object class character length 9. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 7. object class integer length 2. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1.","code":""},{"path":"/reference/epi_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epidemiological compartments and indices — epi_constants","text":"COMPARTMENTS returns character vector epidemiological compartment names. constants return integer values.","code":""},{"path":"/reference/epi_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Epidemiological compartments and indices — epi_constants","text":"DAEDALUS 7 epidemiological compartments: susceptible, exposed, infectious symptomatic (\"infect_symp\"), infectious asymptomatic (\"infect_asymp\") , hospitalised, recovered, dead. 3 additional compartments track number new infections, new hospitalisations, new deaths (i_dE, i_dH, i_dD).","code":""},{"path":"/reference/epi_output_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"Functions quickly summarise timeseries data daedalus() allowing grouping different strata.","code":""},{"path":"/reference/epi_output_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"","code":"get_incidence(   data,   measures = c(\"infections\", \"hospitalisations\", \"deaths\"),   groups = NULL )  get_epidemic_summary(   data,   measures = c(\"infections\", \"hospitalisations\", \"deaths\"),   groups = NULL )"},{"path":"/reference/epi_output_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"data Either <data.frame> <daedalus_output> object. measures character vector one following: \"epidemic_size\", \"total_hospitalisations\" \"total_deaths\" measure return. Defaults returning three long format. groups optional character vector grouping variables correspond model strata. Defaults NULL gives incidence across whole population. Allowed groups correspond modelled strata: \"age_group\", \"vaccine_group\", \"econ_sector\".","code":""},{"path":"/reference/epi_output_helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"<data.frame> long format, least one entry per model timestep, measure, group chosen. get_incidence() returns data frame number daily new infections, new hospitalisations, /new deaths groups specified groups. get_epidemic_summary() returns data frame measure specified measure groups specified groups.","code":""},{"path":"/reference/epi_output_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily incidences and summarise epidemic measures — epi_output_helpers","text":"","code":"data <- daedalus(\"Canada\", \"sars_cov_1\")  # new infections new_infections <- get_incidence(data, \"infections\")  # epidemic summary get_epidemic_summary(   data,   groups = \"age_group\" ) #>    age_group       value                measure #> 1        0-4    29046.87           total_deaths #> 2       5-19   440894.95           total_deaths #> 3      20-65   564992.95           total_deaths #> 4        65+   452988.47           total_deaths #> 5        0-4  1456593.38          epidemic_size #> 6       5-19  5918101.98          epidemic_size #> 7      20-65 34507577.45          epidemic_size #> 8        65+  3038995.38          epidemic_size #> 9        0-4    83789.71 total_hospitalisations #> 10      5-19  1268494.93 total_hospitalisations #> 11     20-65  1983116.47 total_hospitalisations #> 12       65+  1306813.79 total_hospitalisations"},{"path":"/reference/epidemic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Infection characteristics for model epidemics — epidemic_data","title":"Infection characteristics for model epidemics — epidemic_data","text":"Infection parameters used DAEDALUS simulate epidemics interest. epidemic_names provides tags epidemics known users' convenience.","code":""},{"path":"/reference/epidemic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infection characteristics for model epidemics — epidemic_data","text":"","code":"infection_data  infection_parameter_names  epidemic_names"},{"path":[]},{"path":"/reference/epidemic_data.html","id":"infection-data","dir":"Reference","previous_headings":"","what":"infection_data","title":"Infection characteristics for model epidemics — epidemic_data","text":"list 7 elements, corresponding epidemic (see Details), providing 10 infection parameters: r0: single numeric value basic reproduction value infection \\(R_0\\). sigma: single numeric value > 0.0 rate transition exposed compartment one two infectious compartments. p_sigma: single numeric value range \\((0.0, 1.0)\\) proportion infectious individuals also symptomatic. Asymptomatic individuals can different contribution force infection symptomatic individuals. epsilon: single numeric value relative contribution asymptomatic infectious individuals force infection (compared symptomatic individuals). gamma_Is: single numeric value recovery rate infectious individuals hospitalised. gamma_Ia: single numeric value recovery rate asymptomatic infection. gamma_H: numeric vector length 4 age-specific recovery rate individuals hospitalised. eta: numeric vector length N_AGE_GROUPS (4) age-specific hospitalisation rate individuals infectious symptomatic. omega: numeric vector length N_AGE_GROUPS (4) age-specific mortality rate individuals hospitalised. rho: single numeric value rate infection-derived immunity wanes, returning individuals 'recovered' compartment 'susceptible' compartment.","code":""},{"path":"/reference/epidemic_data.html","id":"infection-parameter-names","dir":"Reference","previous_headings":"","what":"infection_parameter_names","title":"Infection characteristics for model epidemics — epidemic_data","text":"character vector 10 names infection parameters infection_data. Mainly internal use.","code":""},{"path":"/reference/epidemic_data.html","id":"epidemic-names","dir":"Reference","previous_headings":"","what":"epidemic_names","title":"Infection characteristics for model epidemics — epidemic_data","text":"character vector 7 elements.","code":""},{"path":"/reference/epidemic_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infection characteristics for model epidemics — epidemic_data","text":"See processing details `data-raw/infection_data.R","code":""},{"path":"/reference/epidemic_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infection characteristics for model epidemics — epidemic_data","text":"Epidemics data available (pathogen parentheses): SARS 2004 (SARS-CoV-1) Influenza 2009 (influenza H1N1) Influenza 1957 (influenza H2N2) Influenza 1918 (influenza H1N1) Covid-19 wild type (SARS-Cov-2 wild type) Covid-19 Omicron (SARS-CoV-2 omicron) Covid-19 Delta (SARS-CoV-2 delta).","code":""},{"path":"/reference/epidemic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infection characteristics for model epidemics — epidemic_data","text":"","code":"# check available epidemics epidemic_names #> [1] \"sars_cov_1\"           \"influenza_2009\"       \"influenza_1957\"       #> [4] \"influenza_1918\"       \"sars_cov_2_pre_alpha\" \"sars_cov_2_omicron\"   #> [7] \"sars_cov_2_delta\""},{"path":"/reference/get_closure_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get closure time limits and calculate duration — get_closure_info","title":"Get closure time limits and calculate duration — get_closure_info","text":"Get closure time limits calculate duration","code":""},{"path":"/reference/get_closure_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get closure time limits and calculate duration — get_closure_info","text":"","code":"get_closure_info(mutables)"},{"path":"/reference/get_closure_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get closure time limits and calculate duration — get_closure_info","text":"mutables environment holding mutable parameters. See prepare_mutable_parameters() template.","code":""},{"path":"/reference/get_closure_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get closure time limits and calculate duration — get_closure_info","text":"three-element list start time, end time, duration closures active.","code":""},{"path":"/reference/get_costs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get epidemic costs from a DAEDALUS model run — get_costs","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"Get epidemic costs DAEDALUS model run","code":""},{"path":"/reference/get_costs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"","code":"get_costs(x, summarise_as = c(\"none\", \"total\", \"domain\"))"},{"path":"/reference/get_costs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"x <daedalus_output> object call daedalus(). summarise_as string among \"none\", \"total\", \"domain\", costs returned. Select \"none\", default, raw costs along overall domain-specific totals; \"total\" overall cost, \"domain\" total costs per domain; domains 'economic', 'education', 'life years'.","code":""},{"path":"/reference/get_costs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"list different cost values, including total cost. See Details information.","code":""},{"path":"/reference/get_costs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"total cost million dollars returned total_cost. comprised following costs.","code":""},{"path":"/reference/get_costs.html","id":"economic-costs","dir":"Reference","previous_headings":"","what":"Economic costs","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"three element list economic_cost_total, total costs pandemic impacts economic sectors, including costs lost gross value added (GVA) due pandemic-control restrictions closures (economic_cost_closures), pandemic-related absences due illness death (economic_cost_absences).","code":""},{"path":"/reference/get_costs.html","id":"educational-costs","dir":"Reference","previous_headings":"","what":"Educational costs","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"three element list education_cost_total, total costs pandemic impacts education due pandemic-control restrictions closures (education_cost_closures), pandemic-related absences due illness death (education_cost_absences).","code":""},{"path":"/reference/get_costs.html","id":"life-years-lost","dir":"Reference","previous_headings":"","what":"Life-years lost","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"four-element vector (number age groups) giving value life-years lost per age group. calculated life-expectancy age group times value statistical life, years assumed value.","code":""},{"path":"/reference/get_costs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get epidemic costs from a DAEDALUS model run — get_costs","text":"","code":"output <- daedalus(\"Canada\", \"influenza_1918\")  get_costs(output) #> $total_cost #> [1] 436377.2 #>  #> $economic_costs #> $economic_costs$economic_cost_total #> [1] 29758.63 #>  #> $economic_costs$economic_cost_closures #> [1] 0 #>  #> $economic_costs$economic_cost_absences #> [1] 29758.63 #>  #>  #> $education_costs #> $education_costs$education_cost_total #> [1] 2277.528 #>  #> $education_costs$education_cost_closures #> [1] 0 #>  #> $education_costs$education_cost_absences #> [1] 2277.528 #>  #>  #> $life_years_lost #> $life_years_lost$life_years_lost_total #> [1] 404341 #>  #> $life_years_lost$life_years_lost_age #>        0-4       5-19      20-65        65+  #>   6140.880  56160.194 338979.698   3060.231  #>  #>"},{"path":"/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameters from DAEDALUS classes — get_data","title":"Get parameters from DAEDALUS classes — get_data","text":"Generic methods S3 classes safely getting class parameters.","code":""},{"path":"/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameters from DAEDALUS classes — get_data","text":"","code":"# S3 method for class 'daedalus_country' get_data(x, to_get, ...)  # S3 method for class 'daedalus_infection' get_data(x, to_get, ...)  # S3 method for class 'daedalus_output' get_data(x, to_get = NULL, ...)  # S3 method for class 'daedalus_vaccination' get_data(x, to_get, ...)  get_data(x, ...)"},{"path":"/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameters from DAEDALUS classes — get_data","text":"x S3 class object daedalus package <daedalus_country> <infection> class. to_get string giving name element x return. ... <dynamic-dots> arguments class methods. Class methods currently support arguments.","code":""},{"path":"/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameters from DAEDALUS classes — get_data","text":"Returns member x, class preserved (e.g. numeric vector country \"demography\"). <daedalus_output> objects, returns model timeseries data element specified.","code":""},{"path":"/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameters from DAEDALUS classes — get_data","text":"","code":"# simple example of getting data country_A <- daedalus_country(\"United Kingdom\") get_data(country_A, \"demography\") #>      0-4     5-19    20-64      65+  #>  3924490 11762039 39536463 12663012   get_data(country_A, \"contact_matrix\") #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5379290 4.704999 0.2863619 #> 5-19  0.5131412 8.7339228 5.874591 0.7418483 #> 20-64 0.4670302 1.7476822 7.830182 1.0685802 #> 65+   0.1180517 0.7548304 3.531487 1.5212437  disease_x <- daedalus_infection(\"sars_cov_1\", r0 = 1.9) get_data(disease_x, \"r0\") #> [1] 1.9  # get model data output <- daedalus(\"Canada\", \"influenza_1918\") head(   get_data(output) ) #>   time age_group compartment econ_sector vaccine_group   value #> 1    1       0-4 susceptible   sector_00  unvaccinated 1993130 #> 2    2       0-4 susceptible   sector_00  unvaccinated 1993128 #> 3    3       0-4 susceptible   sector_00  unvaccinated 1993126 #> 4    4       0-4 susceptible   sector_00  unvaccinated 1993123 #> 5    5       0-4 susceptible   sector_00  unvaccinated 1993118 #> 6    6       0-4 susceptible   sector_00  unvaccinated 1993109"},{"path":"/reference/get_distancing_coefficient.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient to scale transmission by public concern about the pandemic — get_distancing_coefficient","title":"Coefficient to scale transmission by public concern about the pandemic — get_distancing_coefficient","text":"social distancing coefficient value 1.0 arbitrary lower limit, used scale transmission rate represents public concern around pandemic. coefficient 1.0 deaths, reduces asymptotically lower limit deaths increase. Social distancing begins closures begin, ends vaccination complete (yet implemented).","code":""},{"path":"/reference/get_distancing_coefficient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient to scale transmission by public concern about the pandemic — get_distancing_coefficient","text":"","code":"get_distancing_coefficient(new_deaths, rate = 0.01, lower_limit = 0.2)"},{"path":"/reference/get_distancing_coefficient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient to scale transmission by public concern about the pandemic — get_distancing_coefficient","text":"new_deaths number new deaths time t. rate proportional reduction social contacts due additional death. Defaults 0.01, 1% decrease additional death. lower_limit lower limit social contacts can reduced. Defaults 0.2, equivalent greater 50% reduction incoming outgoing contacts.","code":""},{"path":"/reference/get_distancing_coefficient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient to scale transmission by public concern about the pandemic — get_distancing_coefficient","text":"single number 1 lower_limit social distancing coefficient.","code":""},{"path":"/reference/get_hospitalisations.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate total hospitalisations — get_hospitalisations","title":"Calculate total hospitalisations — get_hospitalisations","text":"Calculate total hospitalisations","code":""},{"path":"/reference/get_hospitalisations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate total hospitalisations — get_hospitalisations","text":"","code":"get_hospitalisations(state)"},{"path":"/reference/get_hospitalisations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate total hospitalisations — get_hospitalisations","text":"state ODE state variable array. Must least i_H columns.","code":""},{"path":"/reference/life_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Values of statistical lives lost — life_value","title":"Values of statistical lives lost — life_value","text":"Values dollars (scaled purchasing power parity) statistical life lost four DAEDALUS age groups, accounting life expectancy.","code":""},{"path":"/reference/life_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Values of statistical lives lost — life_value","text":"","code":"life_value"},{"path":[]},{"path":"/reference/life_value.html","id":"life-value","dir":"Reference","previous_headings":"","what":"life_value","title":"Values of statistical lives lost — life_value","text":"list 180 elements, corresponding country territory, giving age-group-specific value statistical life lost. list element numeric vector four values giving value per age group, following order: 0-4, 5-19, 20-65, 65+.","code":""},{"path":"/reference/life_value.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Values of statistical lives lost — life_value","text":"Multiple sources; see processing details `data-raw/life_value.R.","code":""},{"path":"/reference/make_initial_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a default initial state for DAEDALUS — make_initial_state","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"Function prepare model initial state.","code":""},{"path":"/reference/make_initial_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"","code":"make_initial_state(country, initial_state_manual)"},{"path":"/reference/make_initial_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"country country territory object class <daedalus_country>, country territory name included package; see country_names. Country-specific data community workplace contacts, demography, distribution workforce economic sectors automatically accessed package data relevant country name passed string. override package defaults country characteristics, pass <daedalus_country> object instead. See daedalus_country() . initial_state_manual optional named list names p_infectious p_asymptomatic proportion infectious symptomatic individuals age group economic sector. Defaults 1e-6 0.0 respectively.","code":""},{"path":"/reference/make_initial_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a default initial state for DAEDALUS — make_initial_state","text":"array many dimensions N_ECON_STRATA (currently, 46) layer giving proportion individuals group epidemiological compartment.","code":""},{"path":"/reference/make_response_threshold_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Event and root-finding functions to trigger response strategies — make_response_threshold_event","title":"Event and root-finding functions to trigger response strategies — make_response_threshold_event","text":"Prepare functions can passed deSolve::lsoda() event root-finding functions, trigger response strategies reduce disease transmission.","code":""},{"path":"/reference/make_response_threshold_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event and root-finding functions to trigger response strategies — make_response_threshold_event","text":"","code":"make_response_threshold_event(response_threshold)"},{"path":"/reference/make_response_threshold_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event and root-finding functions to trigger response strategies — make_response_threshold_event","text":"response_threshold single numeric value total number hospitalisations causes epidemic response (specified response_strategy) triggered, already triggered via response_time. Currently defaults NULL, country-specific spare hospital capacity value used country_data. Pass number override default country-specific threshold value.","code":""},{"path":"/reference/make_rt_end_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Event and root-finding functions to terminate epidemic responses — make_rt_end_event","title":"Event and root-finding functions to terminate epidemic responses — make_rt_end_event","text":"Prepare functions can passed deSolve::lsoda() event root-finding functions, trigger end interventions scale disease transmission.","code":""},{"path":"/reference/make_rt_end_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event and root-finding functions to terminate epidemic responses — make_rt_end_event","text":"","code":"make_rt_end_event()"},{"path":"/reference/model_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS model constants — model_constants","title":"DAEDALUS model constants — model_constants","text":"Frequently used values DAEDALUS model related model population structure. See also epi_constants constants specific epidemiological model.","code":""},{"path":"/reference/model_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS model constants — model_constants","text":"","code":"N_AGE_GROUPS  N_VACCINE_STRATA  AGE_GROUPS  i_WORKING_AGE  N_ECON_SECTORS  i_EDUCATION_SECTOR  N_ECON_STRATA  i_NOT_WORKING  DIM_AGE_GROUPS  DIM_EPI_COMPARTMENTS  DIM_ECON_SECTORS  DIM_VACCINE_STRATA  i_UNVACCINATED_STRATUM  i_VACCINATED_STRATUM  VACCINE_GROUPS  N_OUTPUT_COLS"},{"path":"/reference/model_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DAEDALUS model constants — model_constants","text":"object class integer length 1. object class integer length 1. object class character length 4. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class character length 2. object class integer length 1.","code":""},{"path":"/reference/model_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS model constants — model_constants","text":"Values model constants.","code":""},{"path":"/reference/model_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DAEDALUS model constants — model_constants","text":"DAEDALUS model requires following values fixed. Number age groups: 4 Number vaccination strata: 2 Age group bins: 0-4 years, 5-19 years, 20-65 years (working age), 65+ years Index working-age age groups: 3; see AGE_GROUPS Number economic sectors: 45 Index individuals working layer 3D state tensor: 1 Number economic strata: 46; note always one number economic sectors, additional stratum work includes individuals working age, proportion working age individuals. Array dimension age groups: 1 Array dimension epidemiological compartments: 2 Array dimension economic sectors: 3 Array dimension vaccination strata: 4","code":""},{"path":"/reference/prepare_mutable_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare mutable parameters for the DAEDALUS model — prepare_mutable_parameters","title":"Prepare mutable parameters for the DAEDALUS model — prepare_mutable_parameters","text":"Prepares closure start end times model output.","code":""},{"path":"/reference/prepare_mutable_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare mutable parameters for the DAEDALUS model — prepare_mutable_parameters","text":"","code":"prepare_mutable_parameters()"},{"path":"/reference/prepare_mutable_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare mutable parameters for the DAEDALUS model — prepare_mutable_parameters","text":"environment three mutable parameters: switch: switch parameter controls whether closures active . hosp_switch: switch excess mortality due hospitalisations required hospital places available. closures_time_start closures_time_end: times closures start end. Defaults end time simulation give default duration 0.0.","code":""},{"path":"/reference/prepare_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare DAEDALUS data — prepare_output","title":"Prepare DAEDALUS data — prepare_output","text":"Convert DAEDALUS data long-format <data.frame>.","code":""},{"path":"/reference/prepare_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare DAEDALUS data — prepare_output","text":"","code":"prepare_output(output)"},{"path":"/reference/prepare_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare DAEDALUS data — prepare_output","text":"output Output daedalus() class <deSolve>.","code":""},{"path":"/reference/prepare_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare DAEDALUS data — prepare_output","text":"<data.frame> long 'tidy' format columns \"time\", \"age_group\", \"compartment\", \"econ_sector\", \"value\", age-group specific value number individuals economic sector epidemiological compartment timestep.","code":""},{"path":"/reference/prepare_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare DAEDALUS data — prepare_output","text":"45 economic sectors, given N_ECON_SECTORS, first 'sector' representing non-working individuals. age groups considered non-working first sector (children retirees), working-age individuals may distributed flexibly various economic sectors (including non-working).","code":""},{"path":"/reference/prepare_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare country parameters for model — prepare_parameters","title":"Prepare country parameters for model — prepare_parameters","text":"Generic prepare_parameters methods associated daedalus classes.","code":""},{"path":"/reference/prepare_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare country parameters for model — prepare_parameters","text":"","code":"# S3 method for class 'daedalus_country' prepare_parameters(x, ...)  # S3 method for class 'daedalus_infection' prepare_parameters(x, ...)  # S3 method for class 'daedalus_vaccination' prepare_parameters(x, ...)  prepare_parameters(x, ...)"},{"path":"/reference/prepare_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare country parameters for model — prepare_parameters","text":"x S3 object appropriate method. ... used; included compatibility methods.","code":""},{"path":"/reference/prepare_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare country parameters for model — prepare_parameters","text":"list parameters suitable DAEDALUS model. prepare_parameters.daedalus_country() returns country parameters, prepare_parameters.daedalus_infection() returns infection parameters.","code":""},{"path":[]},{"path":"/reference/prepare_parameters.html","id":"country-parameters","dir":"Reference","previous_headings":"","what":"Country parameters","title":"Prepare country parameters for model — prepare_parameters","text":"Country contact data processed follows: contact_matrix: scaled leading eigenvalue, column j scaled j-th element country demography vector (.e., scaling contacts age group size group). returned parameter list consists : demography: demography vector; contact_matrix: scaled contact matrix suitable multiplication \\(R_0\\) force infection calculations; cm_unscaled: contact matrix multiplied column-wise demography vector, suitable calculations \\(R_{\\text{eff}}\\); see r_eff(). contacts_workplace: contacts workplaces scaled largest value (leading eigenvalue diagonal matrix contacts); contacts_consumer_worker: contacts workplaces distributed proportion demography distribution, scaled largest singular value (similar eigenvalue non-square matrices). contacts_between_sectors: dummy matrix zeros future use.","code":""},{"path":"/reference/prepare_parameters.html","id":"infection-parameters","dir":"Reference","previous_headings":"","what":"Infection parameters","title":"Prepare country parameters for model — prepare_parameters","text":"Infection parameters returned <daedalusinfection> objects without modification name removed.","code":""},{"path":"/reference/reff_calculation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the effective R — reff_calculation","title":"Calculate the effective R — reff_calculation","text":"simple calculation effective \\(R_\\text{eff}\\), allowing heterogeneity social contacts proportion age group remaining susceptible. assumes single susceptible stratum full susceptibility, updated future versions account addition vaccination strata reduced susceptibility.","code":""},{"path":"/reference/reff_calculation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the effective R — reff_calculation","text":"","code":"r_eff(r0, state, cm)"},{"path":"/reference/reff_calculation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the effective R — reff_calculation","text":"r0 basic reproduction number. state ODE state variable. Must array. cm contact matrix.","code":""},{"path":"/reference/reff_calculation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the effective R — reff_calculation","text":"single numeric value \\(R_\\text{eff}\\).","code":""},{"path":"/reference/scale_nu.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale vaccination rate by remaining eligibles — scale_nu","title":"Scale vaccination rate by remaining eligibles — scale_nu","text":"Scale vaccination rate remaining eligibles","code":""},{"path":"/reference/scale_nu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale vaccination rate by remaining eligibles — scale_nu","text":"","code":"scale_nu(state, nu, uptake_limit)"},{"path":"/reference/scale_nu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale vaccination rate by remaining eligibles — scale_nu","text":"state system state 4-dimensional array. nu vaccination rate.","code":""},{"path":"/reference/scale_nu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale vaccination rate by remaining eligibles — scale_nu","text":"scaled vaccination rate.","code":""},{"path":"/reference/set_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters in DAEDALUS classes — set_data","title":"Set parameters in DAEDALUS classes — set_data","text":"Generic methods S3 classes safely setting class parameters. parameters considered safe change – mostly contact data <country>, parameters <infection> – can changed way.","code":""},{"path":"/reference/set_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters in DAEDALUS classes — set_data","text":"","code":"# S3 method for class 'daedalus_country' set_data(x, ...)  # S3 method for class 'daedalus_infection' set_data(x, ...)  # S3 method for class 'daedalus_vaccination' set_data(x, ...)  set_data(x, ...)"},{"path":"/reference/set_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters in DAEDALUS classes — set_data","text":"x S3 class object daedalus package <daedalus_country> <infection> class. ... <dynamic-dots> Named optional arguments parameters changed, new values. values allowed <daedalus_country> objects \"contact_matrix\", \"contacts_workplace\", \"contacts_consumer_worker\".","code":""},{"path":"/reference/set_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters in DAEDALUS classes — set_data","text":"S3 object class input x.","code":""},{"path":"/reference/set_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parameters in DAEDALUS classes — set_data","text":"","code":"# simple example of setting all contacts to 1 country_A <- daedalus_country(\"United Kingdom\") country_A #> <daedalus_country> #> • Name: United Kingdom #> • Demography: 3924490, 11762039, 39536463, and 12663012 #> • Community contact matrix: #>             0-4      5-19    20-64       65+ #> 0-4   1.9157895 1.5379290 4.704999 0.2863619 #> 5-19  0.5131412 8.7339228 5.874591 0.7418483 #> 20-64 0.4670302 1.7476822 7.830182 1.0685802 #> 65+   0.1180517 0.7548304 3.531487 1.5212437 #> Hospital capacity: 26219  country_A <- set_data(country_A, contact_matrix = matrix(1, 4, 4)) country_A #> <daedalus_country> #> • Name: United Kingdom #> • Demography: 3924490, 11762039, 39536463, and 12663012 #> • Community contact matrix: #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 #> Hospital capacity: 26219  disease_x <- daedalus_infection(\"sars_cov_1\") disease_x <- set_data(disease_x, r0 = 3.0) disease_x #> <daedalus_infection> #> • Epidemic name: sars_cov_1 #> • R0: 3 #> • sigma: 0.217 #> • p_sigma: 0.867 #> • epsilon: 0.58 #> • rho: 0.003 #> • eta: 0.018, 0.082, 0.018, and 0.246 #> • omega: 0.012, 0.012, 0.012, and 0.012 #> • gamma_Ia: 0.476 #> • gamma_Is: 0.25 #> • gamma_H: 0.034, 0.034, 0.034, and 0.034"},{"path":"/reference/summary_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Model output measures and groups for summaries and derived time-series — summary_constants","title":"Model output measures and groups for summaries and derived time-series — summary_constants","text":"Model output measures groups summaries derived time-series","code":""},{"path":"/reference/summary_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model output measures and groups for summaries and derived time-series — summary_constants","text":"","code":"SUMMARY_MEASURES  SUMMARY_GROUPS"},{"path":"/reference/summary_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Model output measures and groups for summaries and derived time-series — summary_constants","text":"object class character length 3. object class character length 3.","code":""},{"path":"/reference/vaccine_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Vaccine investment scenario parameters — vaccine_scenarios","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"Vaccination parameters four main pre-pandemic scenarios pre-pandemic investments vaccine development delivery. vaccination_scenario_names provides names advance vaccine investment scenarios known.","code":""},{"path":"/reference/vaccine_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"","code":"vaccination_scenario_data  vaccination_scenario_names  vaccination_parameter_names"},{"path":"/reference/vaccine_scenarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"object class character length 4. object class character length 3.","code":""},{"path":"/reference/vaccine_scenarios.html","id":"vaccination-scenario-data","dir":"Reference","previous_headings":"","what":"vaccination_scenario_data","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"list 4 elements, corresponding advance vaccine investment strategy. element list three values (see Details). vax_start_time: single number vaccination start time days. nu: single number daily vaccination rate percentage population vaccinated. vax_uptake_limit: single number percentage population willing vaccinated.","code":""},{"path":"/reference/vaccine_scenarios.html","id":"vaccination-scenario-names","dir":"Reference","previous_headings":"","what":"vaccination_scenario_names","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"character vector four elements giving identifier scenario.","code":""},{"path":"/reference/vaccine_scenarios.html","id":"vaccination-parameter-names","dir":"Reference","previous_headings":"","what":"vaccination_parameter_names","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"character vector three elements giving identifier vaccination parameters.","code":""},{"path":"/reference/vaccine_scenarios.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"See processing details `data-raw/vaccination_data.R","code":""},{"path":"/reference/vaccine_scenarios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"scenario three parameters; parameters differ across age groups. Vaccination start time: time days vaccination begins. Vaccination rate: rate, percentage population vaccinated per day. Vaccination uptake limit: percentage population willing accept vaccination.","code":""},{"path":"/reference/vaccine_scenarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vaccine investment scenario parameters — vaccine_scenarios","text":"","code":"# check vaccination scenarios vaccination_scenario_names #> [1] \"none\"   \"low\"    \"medium\" \"high\"    vaccination_scenario_data #> $none #> $none$vax_start_time #> [1] 365 #>  #> $none$nu #> [1] 0.1428571 #>  #> $none$vax_uptake_limit #> [1] 40 #>  #>  #> $low #> $low$vax_start_time #> [1] 300 #>  #> $low$nu #> [1] 0.2857143 #>  #> $low$vax_uptake_limit #> [1] 50 #>  #>  #> $medium #> $medium$vax_start_time #> [1] 200 #>  #> $medium$nu #> [1] 0.4285714 #>  #> $medium$vax_uptake_limit #> [1] 60 #>  #>  #> $high #> $high$vax_start_time #> [1] 100 #>  #> $high$nu #> [1] 0.5 #>  #> $high$vax_uptake_limit #> [1] 80 #>  #>"},{"path":"/news/index.html","id":"daedalus-0015","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.15","title":"daedalus 0.0.15","text":"patch fixes issue closures ended model runs closure began epidemic stopped growing. mostly affected edge cases countries large spare hospital capacity, relatively late response_times. cases closure end time assigned simulation end time, inflating costs related closures. fix: Prevents closures activated hospital_capacity trigger epidemic growing, even hospital capacity threshold crossed; Prevents closures activated response_time trigger epidemic growing stage 01 stage 02. Closures manually turned epidemic growing (Rt<1.0R_t < 1.0). Tests different response times check model behaves expected.","code":""},{"path":"/news/index.html","id":"miscellaneous-changes-0-0-15","dir":"Changelog","previous_headings":"","what":"Miscellaneous changes","title":"daedalus 0.0.15","text":"package now requires minimum R version >= v4.3 due use new function array2DF(); prepare_parameters.daedalus_country() now provides contact matrix scaled leading eigenvalue demography use r_eff().","code":""},{"path":"/news/index.html","id":"daedalus-0014","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.14","title":"daedalus 0.0.14","text":"patch adds vaccine investment scenarios daedalus. model runs must now include assumption level advance vaccine investment, defaulting “none”. Added vaccine investment scenario related data: vaccination_scenario_data vaccination parameters, vaccination_scenario_names, vaccination_parameter_names. Added <daedalus_vaccination> S3 class hold vaccination parameters, along class infrastructure (print, get/set, prepare_parameters() methods). Added helper function daedalus_vaccination() return vaccination object corresponding four vaccine investment scenarios. Added tests vaccination class, model runs vaccination, updated documentation.","code":""},{"path":"/news/index.html","id":"daedalus-0013","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.13","title":"daedalus 0.0.13","text":"patch version adds ISO 3166 2- 3- character country codes countries country_names, package data country_codes_iso2c country_codes_iso3c.","code":""},{"path":"/news/index.html","id":"daedalus-0012","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.12","title":"daedalus 0.0.12","text":"patch version adds functions summarise model outputs (#30): get_incidence() provides per-timestep (daily) values one infections (symptomatic asymptomatic), hospitalisations (demand), deaths, disaggregated one following groups: age group, economic sector, vaccination status. get_epidemic_summary() provides total number individuals infected, hospitalised, dead, one groups, defaulting providing overall summary. model state variable now includes values tracking daily infections (susceptible exposed) daily hospitalisations. Basic tests added functions. Package data.table imported help model data output processing.","code":""},{"path":"/news/index.html","id":"daedalus-0011","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.11","title":"daedalus 0.0.11","text":"patch version corrects spare hospital capacity data using corrected versions raw hospital capacity data (#31). country_data country_names package data also updated. Thailand now available country.","code":""},{"path":"/news/index.html","id":"daedalus-0010","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.10","title":"daedalus 0.0.10","text":"patch version adds basic vaccination functionality, controlled newly added vaccination_rate parameter daedalus() Vaccination starts response triggered, active even ‘closures’ scenario; Vaccination rate start time uniform across age groups; Vaccine-derived protection (reduced susceptibility) represented hard-coded parameter tau, waning protection also hard-coded represented parameter psi. Default values 0.5 1 / 270, respectively; RtR_t calculation r_eff() includes reduced susceptibility vaccinated individuals. Internal changes include: system state now represented 4-dimensional array, vaccination groups/strata 4th dimension (see package constant DIM_VACCINE_STRATA); ODE system updated include reduced susceptibility movements vaccination strata; Vaccination rate nu represented terms proportion total population, internal function scale_nu() increases nu number individuals eligible vaccination decreases. Added tests vaccination functionality.","code":""},{"path":"/news/index.html","id":"daedalus-009","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.9","title":"daedalus 0.0.9","text":"patch version adds spontaneous social distancing mechanism model internal function get_distancing_coefficient(), modifies infection transmission rate based number new deaths. intention model public concern leads spontaneous reduction community social contacts. Social distancing independent specific response strategy chosen, active response strategy active. future, social distancing conditioned vaccination regime completion. Social distancing active ‘response’ scenario. Workplace contacts affected. Social distancing scales transmission rate value 1.0 (distancing) lower_limit (arbitrary value 0.2) using exponential decay function.","code":""},{"path":"/news/index.html","id":"daedalus-008","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.8","title":"daedalus 0.0.8","text":"patch adds hospital capacity data two downstream effects. Spare hospital capacity data raw data file added inst/extdata. processing script generate intermediate dataset added data-raw/. number countries available data reduced 41. <daedalus_country> class objects now provide spare capacity data. call daedalus() now takes response_threshold country-specific hospital capacity default. Users can still pass custom value override package data. model’s mortality rate omega increased 1.6x total number hospitalisations exceed spare hospital capacity. implemented using switch hosp_switch mutable parameter, switch activation termination rolled event functions control closures. Added tests check hospital capacity expected effect.","code":""},{"path":"/news/index.html","id":"daedalus-007","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.7","title":"daedalus 0.0.7","text":"patch adds functionality calculate pandemic costs using newly added function get_costs(). patch also adds life_value, list country-wise, age-specific values statistical life lost package data. changes: Data preparation scripts raw data used generate life_value data. Subsetting countries data available leaves 67 countries; Taiwan Hong Kong removed due lack life value data. <daedalus_output> now includes measure total simulation time useful future calculations percentage GDP loss. <daedalus_output> also returns openness coefficient vector associated model response strategy. Tests documentation changes form function docs vignette updates. Package data.table now imported use cost calculations. Package DESCRIPTION updated reflect scenario modelling rather optimisation.","code":""},{"path":"/news/index.html","id":"daedalus-006","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.6","title":"daedalus 0.0.6","text":"patch adds <daedalus_infection> class represent hold infection parameter data daedalus(). Access, assignment, print methods also added, addition internal helpers as_country(). class tested newly added tests. changes: get_data(), set_data() prepare_parameters() generics now methods <daedalus_infection>s. Removes make_infection_parameters() favour prepare_parameters.infection(). daedalus() argument epidemic accepting epidemic name string changed argument infection accepting <daedalus_infection> objects epidemic names. Vignettes updated use <daedalus_infection> objects. Website reference page updated sections.","code":""},{"path":"/news/index.html","id":"daedalus-005","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.5","title":"daedalus 0.0.5","text":"patch adds <daedalus_country> class represent country territory data daedalus(). Access, assignment, print methods also added, addition internal helpers as_daedalus_country(). class tested newly added tests. changes: Adds generic functions get_data(), set_data() prepare_parameters(), methods <daedalus_country> objects. Methods infection data also anticipated. Removes make_country_parameters() favour prepare_parameters.daedalus_country(). daedalus() accepts first argument either country name <daedalus_country>, longer accepts country_params_manual argument; changes country parameters made via class. make_initial_state() works <daedalus_country> objects instead country names. Since internal function support passing country string name. Vignettes updated show use <daedalus_country> objects.","code":""},{"path":"/news/index.html","id":"daedalus-004","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.4","title":"daedalus 0.0.4","text":"patch adds basic pandemic response functionality (#15). functionality shown new vignette thresholded_interventions.Rmd. function signature daedalus() changed accept response_strategy, implementation_level, response_time, response_threshold arguments specify parameters. Sensible defaults strategy “none”, “light” implementation level strategies. model supports “none”, “economic closures”, “school closures”, “elimination” strategies, economic sector openness coefficients “light” “heavy” implementation strategies stored package data object closure_data. data-raw/closure_data.R file shows data generated raw data files provided EPPI added inst/extdata. Closures triggered response time reached, total hospitalisation reaching response threshold. state variable expanded one accommodate switch initially zero, changed one () response activated, back zero response ends. Responses currently end trigger effective R less 1.0. make_parameters() function split make_infect_parameters() make_country_parameters() clearer manageable. daedalus()-level override parameters originally implemented ... replaced three separate overrides: country_params_manual, infect_params_manual, initial_state_manual, users pass custom values. prepare_output() made internal; omits data non-working age groups economic sectors (always 0), pads sector numbers fit format sector_XX. Internal functions R effective calculations getting total hospitalisations, r_eff() get_hospitalisations() added. Closures implemented deSolve::events triggered rootfinding function, separate functions activation termination, implemented make_response_threshold_event() make_rt_end_event(). contacts_between_sectors now set 0.0, previously 1e-6. Added tests closure triggers expected effects; closure end points specifically tested.","code":""},{"path":"/news/index.html","id":"daedalus-003","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.3","title":"daedalus 0.0.3","text":"patch version adds workplace infections epidemiological model, adds country demography data. Added worker--worker infections within sectors, consumer worker contacts (#9). Added package data: country_data (country demography data) economic_contacts (sector-wise contacts data). Note worker--worker contacts sectors currently takes dummy value expected used near future (#11). Modified daedalus::daedalus() take single required argument country name run model package data country contact matrices economic demographic data (#11). Users can still pass infection parameters via .... Made package function default_parameters() internal renamed make_parameters(); added internal helper function make_initial_state() quickly generate country-appropriate initial states. Added documentation tests modified function calls.","code":""},{"path":"/news/index.html","id":"daedalus-002","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.2","title":"daedalus 0.0.2","text":"patch version adds basic epidemiological model (#7). Added model functions daedalus() (user-facing) .daedalus_ode() (internal) run simple age-stratified (4 age groups) SEIR-HD epidemiological model taken @robj411 https://github.com/robj411/p2_drivers, Added default model parameters default_parameters() correspond roughly pandemic influenza, Added prepare_output() prepare daedalus() output, Added tests functions, Updated package infrastructure: DESCRIPTION, NAMESPACE, WORDLIST, .Rbuildignore, _pkgdown.yml reference. Disabled undesirable_function_linter vignettes flags library() calls. Updated Readme added content ‘Get started’ vignette.","code":""},{"path":"/news/index.html","id":"daedalus-001","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.1","title":"daedalus 0.0.1","text":"Initial package setup including GitHub Actions workflows code quality checks. Updated GH Actions workflows R CMD check (fails ‘NOTE’) code test coverage; Added linting, citation update, Readme rendering, license year update workflows; Added spellchecking known words list.","code":""}]
